{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/hijri-converter@1.1.1/node_modules/hijri-converter/index.js", "../../../node_modules/.pnpm/grammy@1.34.0/node_modules/grammy/out/web.mjs", "../../../src/helpers/getHijriDate.ts", "../../../src/bot/polls/content.ts", "../../../src/bot/polls/scheduler.ts", "../../../src/bot.ts", "../../../src/index.ts"],
  "sourceRoot": "C:\\project\\eghatha_bot\\.wrangler\\tmp\\deploy-RzNXEc",
  "sourcesContent": ["// prettier-ignore\nconst ummalqura = {\n    ummalquraData: [28607, 28636, 28665, 28695, 28724, 28754, 28783, 28813, 28843, 28872, 28901, 28931, 28960, 28990, 29019, 29049, 29078, 29108, 29137, 29167,\n        29196, 29226, 29255, 29285, 29315, 29345, 29375, 29404, 29434, 29463, 29492, 29522, 29551, 29580, 29610, 29640, 29669, 29699, 29729, 29759,\n        29788, 29818, 29847, 29876, 29906, 29935, 29964, 29994, 30023, 30053, 30082, 30112, 30141, 30171, 30200, 30230, 30259, 30289, 30318, 30348,\n        30378, 30408, 30437, 30467, 30496, 30526, 30555, 30585, 30614, 30644, 30673, 30703, 30732, 30762, 30791, 30821, 30850, 30880, 30909, 30939,\n        30968, 30998, 31027, 31057, 31086, 31116, 31145, 31175, 31204, 31234, 31263, 31293, 31322, 31352, 31381, 31411, 31441, 31471, 31500, 31530,\n        31559, 31589, 31618, 31648, 31676, 31706, 31736, 31766, 31795, 31825, 31854, 31884, 31913, 31943, 31972, 32002, 32031, 32061, 32090, 32120,\n        32150, 32180, 32209, 32239, 32268, 32298, 32327, 32357, 32386, 32416, 32445, 32475, 32504, 32534, 32563, 32593, 32622, 32652, 32681, 32711,\n        32740, 32770, 32799, 32829, 32858, 32888, 32917, 32947, 32976, 33006, 33035, 33065, 33094, 33124, 33153, 33183, 33213, 33243, 33272, 33302,\n        33331, 33361, 33390, 33420, 33450, 33479, 33509, 33539, 33568, 33598, 33627, 33657, 33686, 33716, 33745, 33775, 33804, 33834, 33863, 33893,\n        33922, 33952, 33981, 34011, 34040, 34069, 34099, 34128, 34158, 34187, 34217, 34247, 34277, 34306, 34336, 34365, 34395, 34424, 34454, 34483,\n        34512, 34542, 34571, 34601, 34631, 34660, 34690, 34719, 34749, 34778, 34808, 34837, 34867, 34896, 34926, 34955, 34985, 35015, 35044, 35074,\n        35103, 35133, 35162, 35192, 35222, 35251, 35280, 35310, 35340, 35370, 35399, 35429, 35458, 35488, 35517, 35547, 35576, 35605, 35635, 35665,\n        35694, 35723, 35753, 35782, 35811, 35841, 35871, 35901, 35930, 35960, 35989, 36019, 36048, 36078, 36107, 36136, 36166, 36195, 36225, 36254,\n        36284, 36314, 36343, 36373, 36403, 36433, 36462, 36492, 36521, 36551, 36580, 36610, 36639, 36669, 36698, 36728, 36757, 36786, 36816, 36845,\n        36875, 36904, 36934, 36963, 36993, 37022, 37052, 37081, 37111, 37141, 37170, 37200, 37229, 37259, 37288, 37318, 37347, 37377, 37406, 37436,\n        37465, 37495, 37524, 37554, 37584, 37613, 37643, 37672, 37701, 37731, 37760, 37790, 37819, 37849, 37878, 37908, 37938, 37967, 37997, 38027,\n        38056, 38085, 38115, 38144, 38174, 38203, 38233, 38262, 38292, 38322, 38351, 38381, 38410, 38440, 38469, 38499, 38528, 38558, 38587, 38617,\n        38646, 38676, 38705, 38735, 38764, 38794, 38823, 38853, 38882, 38912, 38941, 38971, 39001, 39030, 39059, 39089, 39118, 39148, 39178, 39208,\n        39237, 39267, 39297, 39326, 39355, 39385, 39414, 39444, 39473, 39503, 39532, 39562, 39592, 39621, 39650, 39680, 39709, 39739, 39768, 39798,\n        39827, 39857, 39886, 39916, 39946, 39975, 40005, 40035, 40064, 40094, 40123, 40153, 40182, 40212, 40241, 40271, 40300, 40330, 40359, 40389,\n        40418, 40448, 40477, 40507, 40536, 40566, 40595, 40625, 40655, 40685, 40714, 40744, 40773, 40803, 40832, 40862, 40892, 40921, 40951, 40980,\n        41009, 41039, 41068, 41098, 41127, 41157, 41186, 41216, 41245, 41275, 41304, 41334, 41364, 41393, 41422, 41452, 41481, 41511, 41540, 41570,\n        41599, 41629, 41658, 41688, 41718, 41748, 41777, 41807, 41836, 41865, 41894, 41924, 41953, 41983, 42012, 42042, 42072, 42102, 42131, 42161,\n        42190, 42220, 42249, 42279, 42308, 42337, 42367, 42397, 42426, 42456, 42485, 42515, 42545, 42574, 42604, 42633, 42662, 42692, 42721, 42751,\n        42780, 42810, 42839, 42869, 42899, 42929, 42958, 42988, 43017, 43046, 43076, 43105, 43135, 43164, 43194, 43223, 43253, 43283, 43312, 43342,\n        43371, 43401, 43430, 43460, 43489, 43519, 43548, 43578, 43607, 43637, 43666, 43696, 43726, 43755, 43785, 43814, 43844, 43873, 43903, 43932,\n        43962, 43991, 44021, 44050, 44080, 44109, 44139, 44169, 44198, 44228, 44258, 44287, 44317, 44346, 44375, 44405, 44434, 44464, 44493, 44523,\n        44553, 44582, 44612, 44641, 44671, 44700, 44730, 44759, 44788, 44818, 44847, 44877, 44906, 44936, 44966, 44996, 45025, 45055, 45084, 45114,\n        45143, 45172, 45202, 45231, 45261, 45290, 45320, 45350, 45380, 45409, 45439, 45468, 45498, 45527, 45556, 45586, 45615, 45644, 45674, 45704,\n        45733, 45763, 45793, 45823, 45852, 45882, 45911, 45940, 45970, 45999, 46028, 46058, 46088, 46117, 46147, 46177, 46206, 46236, 46265, 46295,\n        46324, 46354, 46383, 46413, 46442, 46472, 46501, 46531, 46560, 46590, 46620, 46649, 46679, 46708, 46738, 46767, 46797, 46826, 46856, 46885,\n        46915, 46944, 46974, 47003, 47033, 47063, 47092, 47122, 47151, 47181, 47210, 47240, 47269, 47298, 47328, 47357, 47387, 47417, 47446, 47476,\n        47506, 47535, 47565, 47594, 47624, 47653, 47682, 47712, 47741, 47771, 47800, 47830, 47860, 47890, 47919, 47949, 47978, 48008, 48037, 48066,\n        48096, 48125, 48155, 48184, 48214, 48244, 48273, 48303, 48333, 48362, 48392, 48421, 48450, 48480, 48509, 48538, 48568, 48598, 48627, 48657,\n        48687, 48717, 48746, 48776, 48805, 48834, 48864, 48893, 48922, 48952, 48982, 49011, 49041, 49071, 49100, 49130, 49160, 49189, 49218, 49248,\n        49277, 49306, 49336, 49365, 49395, 49425, 49455, 49484, 49514, 49543, 49573, 49602, 49632, 49661, 49690, 49720, 49749, 49779, 49809, 49838,\n        49868, 49898, 49927, 49957, 49986, 50016, 50045, 50075, 50104, 50133, 50163, 50192, 50222, 50252, 50281, 50311, 50340, 50370, 50400, 50429,\n        50459, 50488, 50518, 50547, 50576, 50606, 50635, 50665, 50694, 50724, 50754, 50784, 50813, 50843, 50872, 50902, 50931, 50960, 50990, 51019,\n        51049, 51078, 51108, 51138, 51167, 51197, 51227, 51256, 51286, 51315, 51345, 51374, 51403, 51433, 51462, 51492, 51522, 51552, 51582, 51611,\n        51641, 51670, 51699, 51729, 51758, 51787, 51816, 51846, 51876, 51906, 51936, 51965, 51995, 52025, 52054, 52083, 52113, 52142, 52171, 52200,\n        52230, 52260, 52290, 52319, 52349, 52379, 52408, 52438, 52467, 52497, 52526, 52555, 52585, 52614, 52644, 52673, 52703, 52733, 52762, 52792,\n        52822, 52851, 52881, 52910, 52939, 52969, 52998, 53028, 53057, 53087, 53116, 53146, 53176, 53205, 53235, 53264, 53294, 53324, 53353, 53383,\n        53412, 53441, 53471, 53500, 53530, 53559, 53589, 53619, 53648, 53678, 53708, 53737, 53767, 53796, 53825, 53855, 53884, 53913, 53943, 53973,\n        54003, 54032, 54062, 54092, 54121, 54151, 54180, 54209, 54239, 54268, 54297, 54327, 54357, 54387, 54416, 54446, 54476, 54505, 54535, 54564,\n        54593, 54623, 54652, 54681, 54711, 54741, 54770, 54800, 54830, 54859, 54889, 54919, 54948, 54977, 55007, 55036, 55066, 55095, 55125, 55154,\n        55184, 55213, 55243, 55273, 55302, 55332, 55361, 55391, 55420, 55450, 55479, 55508, 55538, 55567, 55597, 55627, 55657, 55686, 55716, 55745,\n        55775, 55804, 55834, 55863, 55892, 55922, 55951, 55981, 56011, 56040, 56070, 56100, 56129, 56159, 56188, 56218, 56247, 56276, 56306, 56335,\n        56365, 56394, 56424, 56454, 56483, 56513, 56543, 56572, 56601, 56631, 56660, 56690, 56719, 56749, 56778, 56808, 56837, 56867, 56897, 56926,\n        56956, 56985, 57015, 57044, 57074, 57103, 57133, 57162, 57192, 57221, 57251, 57280, 57310, 57340, 57369, 57399, 57429, 57458, 57487, 57517,\n        57546, 57576, 57605, 57634, 57664, 57694, 57723, 57753, 57783, 57813, 57842, 57871, 57901, 57930, 57959, 57989, 58018, 58048, 58077, 58107,\n        58137, 58167, 58196, 58226, 58255, 58285, 58314, 58343, 58373, 58402, 58432, 58461, 58491, 58521, 58551, 58580, 58610, 58639, 58669, 58698,\n        58727, 58757, 58786, 58816, 58845, 58875, 58905, 58934, 58964, 58994, 59023, 59053, 59082, 59111, 59141, 59170, 59200, 59229, 59259, 59288,\n        59318, 59348, 59377, 59407, 59436, 59466, 59495, 59525, 59554, 59584, 59613, 59643, 59672, 59702, 59731, 59761, 59791, 59820, 59850, 59879,\n        59909, 59939, 59968, 59997, 60027, 60056, 60086, 60115, 60145, 60174, 60204, 60234, 60264, 60293, 60323, 60352, 60381, 60411, 60440, 60469,\n        60499, 60528, 60558, 60588, 60618, 60648, 60677, 60707, 60736, 60765, 60795, 60824, 60853, 60883, 60912, 60942, 60972, 61002, 61031, 61061,\n        61090, 61120, 61149, 61179, 61208, 61237, 61267, 61296, 61326, 61356, 61385, 61415, 61445, 61474, 61504, 61533, 61563, 61592, 61621, 61651,\n        61680, 61710, 61739, 61769, 61799, 61828, 61858, 61888, 61917, 61947, 61976, 62006, 62035, 62064, 62094, 62123, 62153, 62182, 62212, 62242,\n        62271, 62301, 62331, 62360, 62390, 62419, 62448, 62478, 62507, 62537, 62566, 62596, 62625, 62655, 62685, 62715, 62744, 62774, 62803, 62832,\n        62862, 62891, 62921, 62950, 62980, 63009, 63039, 63069, 63099, 63128, 63157, 63187, 63216, 63246, 63275, 63305, 63334, 63363, 63393, 63423,\n        63453, 63482, 63512, 63541, 63571, 63600, 63630, 63659, 63689, 63718, 63747, 63777, 63807, 63836, 63866, 63895, 63925, 63955, 63984, 64014,\n        64043, 64073, 64102, 64131, 64161, 64190, 64220, 64249, 64279, 64309, 64339, 64368, 64398, 64427, 64457, 64486, 64515, 64545, 64574, 64603,\n        64633, 64663, 64692, 64722, 64752, 64782, 64811, 64841, 64870, 64899, 64929, 64958, 64987, 65017, 65047, 65076, 65106, 65136, 65166, 65195,\n        65225, 65254, 65283, 65313, 65342, 65371, 65401, 65431, 65460, 65490, 65520, 65549, 65579, 65608, 65638, 65667, 65697, 65726, 65755, 65785,\n        65815, 65844, 65874, 65903, 65933, 65963, 65992, 66022, 66051, 66081, 66110, 66140, 66169, 66199, 66228, 66258, 66287, 66317, 66346, 66376,\n        66405, 66435, 66465, 66494, 66524, 66553, 66583, 66612, 66641, 66671, 66700, 66730, 66760, 66789, 66819, 66849, 66878, 66908, 66937, 66967,\n        66996, 67025, 67055, 67084, 67114, 67143, 67173, 67203, 67233, 67262, 67292, 67321, 67351, 67380, 67409, 67439, 67468, 67497, 67527, 67557,\n        67587, 67617, 67646, 67676, 67705, 67735, 67764, 67793, 67823, 67852, 67882, 67911, 67941, 67971, 68000, 68030, 68060, 68089, 68119, 68148,\n        68177, 68207, 68236, 68266, 68295, 68325, 68354, 68384, 68414, 68443, 68473, 68502, 68532, 68561, 68591, 68620, 68650, 68679, 68708, 68738,\n        68768, 68797, 68827, 68857, 68886, 68916, 68946, 68975, 69004, 69034, 69063, 69092, 69122, 69152, 69181, 69211, 69240, 69270, 69300, 69330,\n        69359, 69388, 69418, 69447, 69476, 69506, 69535, 69565, 69595, 69624, 69654, 69684, 69713, 69743, 69772, 69802, 69831, 69861, 69890, 69919,\n        69949, 69978, 70008, 70038, 70067, 70097, 70126, 70156, 70186, 70215, 70245, 70274, 70303, 70333, 70362, 70392, 70421, 70451, 70481, 70510,\n        70540, 70570, 70599, 70629, 70658, 70687, 70717, 70746, 70776, 70805, 70835, 70864, 70894, 70924, 70954, 70983, 71013, 71042, 71071, 71101,\n        71130, 71159, 71189, 71218, 71248, 71278, 71308, 71337, 71367, 71397, 71426, 71455, 71485, 71514, 71543, 71573, 71602, 71632, 71662, 71691,\n        71721, 71751, 71781, 71810, 71839, 71869, 71898, 71927, 71957, 71986, 72016, 72046, 72075, 72105, 72135, 72164, 72194, 72223, 72253, 72282,\n        72311, 72341, 72370, 72400, 72429, 72459, 72489, 72518, 72548, 72577, 72607, 72637, 72666, 72695, 72725, 72754, 72784, 72813, 72843, 72872,\n        72902, 72931, 72961, 72991, 73020, 73050, 73080, 73109, 73139, 73168, 73197, 73227, 73256, 73286, 73315, 73345, 73375, 73404, 73434, 73464,\n        73493, 73523, 73552, 73581, 73611, 73640, 73669, 73699, 73729, 73758, 73788, 73818, 73848, 73877, 73907, 73936, 73965, 73995, 74024, 74053,\n        74083, 74113, 74142, 74172, 74202, 74231, 74261, 74291, 74320, 74349, 74379, 74408, 74437, 74467, 74497, 74526, 74556, 74586, 74615, 74645,\n        74675, 74704, 74733, 74763, 74792, 74822, 74851, 74881, 74910, 74940, 74969, 74999, 75029, 75058, 75088, 75117, 75147, 75176, 75206, 75235,\n        75264, 75294, 75323, 75353, 75383, 75412, 75442, 75472, 75501, 75531, 75560, 75590, 75619, 75648, 75678, 75707, 75737, 75766, 75796, 75826,\n        75856, 75885, 75915, 75944, 75974, 76003, 76032, 76062, 76091, 76121, 76150, 76180, 76210, 76239, 76269, 76299, 76328, 76358, 76387, 76416,\n        76446, 76475, 76505, 76534, 76564, 76593, 76623, 76653, 76682, 76712, 76741, 76771, 76801, 76830, 76859, 76889, 76918, 76948, 76977, 77007,\n        77036, 77066, 77096, 77125, 77155, 77185, 77214, 77243, 77273, 77302, 77332, 77361, 77390, 77420, 77450, 77479, 77509, 77539, 77569, 77598,\n        77627, 77657, 77686, 77715, 77745, 77774, 77804, 77833, 77863, 77893, 77923, 77952, 77982, 78011, 78041, 78070, 78099, 78129, 78158, 78188,\n        78217, 78247, 78277, 78307, 78336, 78366, 78395, 78425, 78454, 78483, 78513, 78542, 78572, 78601, 78631, 78661, 78690, 78720, 78750, 78779,\n        78808, 78838, 78867, 78897, 78926, 78956, 78985, 79015, 79044, 79074, 79104, 79133, 79163, 79192, 79222, 79251, 79281, 79310, 79340, 79369,\n        79399, 79428, 79458, 79487, 79517, 79546, 79576, 79606, 79635, 79665, 79695, 79724, 79753, 79783, 79812, 79841, 79871, 79900, 79930, 79960,\n        79990]\n};\n\nfunction div(a, b) {\n    return ~~(a / b);\n}\n\nfunction mod(a, b) {\n    return a - ~~(a / b) * b;\n}\n\nfunction h2d(hy, hm, hd) {\n    var i = getNewMoonMJDNIndex(hy, hm);\n    var mjdn = hd + ummalqura.ummalquraData[i - 1] - 1;\n    var jdn = mjdn + 2400000;\n    return jdn;\n}\n\nfunction d2h(jdn) {\n    var mjdn = jdn - 2400000,\n        i = getNewMoonMJDNIndexByJDN(mjdn),\n        totalMonths = i + 16260,\n        cYears = Math.floor((totalMonths - 1) / 12),\n        hy = cYears + 1,\n        hm = totalMonths - 12 * cYears,\n        hd = mjdn - ummalqura.ummalquraData[i - 1] + 1;\n\n    return {\n        hy: hy,\n        hm: hm,\n        hd: hd,\n    };\n}\n\nfunction g2d(gy, gm, gd) {\n    var d =\n        div((gy + div(gm - 8, 6) + 100100) * 1461, 4) +\n        div(153 * mod(gm + 9, 12) + 2, 5) +\n        gd -\n        34840408;\n    d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n    return d;\n}\n\nfunction d2g(jdn) {\n    var j, i, gd, gm, gy;\n    j = 4 * jdn + 139361631;\n    j = j + div(div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908;\n    i = div(mod(j, 1461), 4) * 5 + 308;\n    gd = div(mod(i, 153), 5) + 1;\n    gm = mod(div(i, 153), 12) + 1;\n    gy = div(j, 1461) - 100100 + div(8 - gm, 6);\n    return {\n        gy: gy,\n        gm: gm,\n        gd: gd,\n    };\n}\n\nfunction getNewMoonMJDNIndex(hy, hm) {\n    var cYears = hy - 1,\n        totalMonths = cYears * 12 + 1 + (hm - 1),\n        i = totalMonths - 16260;\n    return i;\n}\n\nfunction getNewMoonMJDNIndexByJDN(mjdn) {\n    for (var i = 0; i < ummalqura.ummalquraData.length; i = i + 1) {\n        if (ummalqura.ummalquraData[i] > mjdn) return i;\n    }\n}\n\nexports.toHijri = function (gy, gm, gd) {\n    var h = d2h(g2d(gy, gm, gd));\n    return h;\n}\n\nexports.toGregorian = function (hy, hm, hd) {\n    var g = d2g(h2d(hy, hm, hd));\n    return g;\n}\n", "const filterQueryCache = new Map();\nfunction matchFilter(filter) {\n    const queries = Array.isArray(filter) ? filter : [\n        filter\n    ];\n    const key = queries.join(\",\");\n    const predicate = filterQueryCache.get(key) ?? (()=>{\n        const parsed = parse(queries);\n        const pred = compile(parsed);\n        filterQueryCache.set(key, pred);\n        return pred;\n    })();\n    return (ctx)=>predicate(ctx);\n}\nfunction parse(filter) {\n    return Array.isArray(filter) ? filter.map((q)=>q.split(\":\")) : [\n        filter.split(\":\")\n    ];\n}\nfunction compile(parsed) {\n    const preprocessed = parsed.flatMap((q)=>check(q, preprocess(q)));\n    const ltree = treeify(preprocessed);\n    const predicate = arborist(ltree);\n    return (ctx)=>!!predicate(ctx.update, ctx);\n}\nfunction preprocess(filter) {\n    const valid = UPDATE_KEYS;\n    const expanded = [\n        filter\n    ].flatMap((q)=>{\n        const [l1, l2, l3] = q;\n        if (!(l1 in L1_SHORTCUTS)) return [\n            q\n        ];\n        if (!l1 && !l2 && !l3) return [\n            q\n        ];\n        const targets = L1_SHORTCUTS[l1];\n        const expanded = targets.map((s)=>[\n                s,\n                l2,\n                l3\n            ]);\n        if (l2 === undefined) return expanded;\n        if (l2 in L2_SHORTCUTS && (l2 || l3)) return expanded;\n        return expanded.filter(([s])=>!!valid[s]?.[l2]);\n    }).flatMap((q)=>{\n        const [l1, l2, l3] = q;\n        if (!(l2 in L2_SHORTCUTS)) return [\n            q\n        ];\n        if (!l2 && !l3) return [\n            q\n        ];\n        const targets = L2_SHORTCUTS[l2];\n        const expanded = targets.map((s)=>[\n                l1,\n                s,\n                l3\n            ]);\n        if (l3 === undefined) return expanded;\n        return expanded.filter(([, s])=>!!valid[l1]?.[s]?.[l3]);\n    });\n    if (expanded.length === 0) {\n        throw new Error(`Shortcuts in '${filter.join(\":\")}' do not expand to any valid filter query`);\n    }\n    return expanded;\n}\nfunction check(original, preprocessed) {\n    if (preprocessed.length === 0) throw new Error(\"Empty filter query given\");\n    const errors = preprocessed.map(checkOne).filter((r)=>r !== true);\n    if (errors.length === 0) return preprocessed;\n    else if (errors.length === 1) throw new Error(errors[0]);\n    else {\n        throw new Error(`Invalid filter query '${original.join(\":\")}'. There are ${errors.length} errors after expanding the contained shortcuts: ${errors.join(\"; \")}`);\n    }\n}\nfunction checkOne(filter) {\n    const [l1, l2, l3, ...n] = filter;\n    if (l1 === undefined) return \"Empty filter query given\";\n    if (!(l1 in UPDATE_KEYS)) {\n        const permitted = Object.keys(UPDATE_KEYS);\n        return `Invalid L1 filter '${l1}' given in '${filter.join(\":\")}'. \\\nPermitted values are: ${permitted.map((k)=>`'${k}'`).join(\", \")}.`;\n    }\n    if (l2 === undefined) return true;\n    const l1Obj = UPDATE_KEYS[l1];\n    if (!(l2 in l1Obj)) {\n        const permitted = Object.keys(l1Obj);\n        return `Invalid L2 filter '${l2}' given in '${filter.join(\":\")}'. \\\nPermitted values are: ${permitted.map((k)=>`'${k}'`).join(\", \")}.`;\n    }\n    if (l3 === undefined) return true;\n    const l2Obj = l1Obj[l2];\n    if (!(l3 in l2Obj)) {\n        const permitted = Object.keys(l2Obj);\n        return `Invalid L3 filter '${l3}' given in '${filter.join(\":\")}'. ${permitted.length === 0 ? `No further filtering is possible after '${l1}:${l2}'.` : `Permitted values are: ${permitted.map((k)=>`'${k}'`).join(\", \")}.`}`;\n    }\n    if (n.length === 0) return true;\n    return `Cannot filter further than three levels, ':${n.join(\":\")}' is invalid!`;\n}\nfunction treeify(paths) {\n    const tree = {};\n    for (const [l1, l2, l3] of paths){\n        const subtree = tree[l1] ??= {};\n        if (l2 !== undefined) {\n            const set = subtree[l2] ??= new Set();\n            if (l3 !== undefined) set.add(l3);\n        }\n    }\n    return tree;\n}\nfunction or(left, right) {\n    return (obj, ctx)=>left(obj, ctx) || right(obj, ctx);\n}\nfunction concat(get, test) {\n    return (obj, ctx)=>{\n        const nextObj = get(obj, ctx);\n        return nextObj && test(nextObj, ctx);\n    };\n}\nfunction leaf(pred) {\n    return (obj, ctx)=>pred(obj, ctx) != null;\n}\nfunction arborist(tree) {\n    const l1Predicates = Object.entries(tree).map(([l1, subtree])=>{\n        const l1Pred = (obj)=>obj[l1];\n        const l2Predicates = Object.entries(subtree).map(([l2, set])=>{\n            const l2Pred = (obj)=>obj[l2];\n            const l3Predicates = Array.from(set).map((l3)=>{\n                const l3Pred = l3 === \"me\" ? (obj, ctx)=>{\n                    const me = ctx.me.id;\n                    return testMaybeArray(obj, (u)=>u.id === me);\n                } : (obj)=>testMaybeArray(obj, (e)=>e[l3] || e.type === l3);\n                return l3Pred;\n            });\n            return l3Predicates.length === 0 ? leaf(l2Pred) : concat(l2Pred, l3Predicates.reduce(or));\n        });\n        return l2Predicates.length === 0 ? leaf(l1Pred) : concat(l1Pred, l2Predicates.reduce(or));\n    });\n    if (l1Predicates.length === 0) {\n        throw new Error(\"Cannot create filter function for empty query\");\n    }\n    return l1Predicates.reduce(or);\n}\nfunction testMaybeArray(t, pred) {\n    const p = (x)=>x != null && pred(x);\n    return Array.isArray(t) ? t.some(p) : p(t);\n}\nconst ENTITY_KEYS = {\n    mention: {},\n    hashtag: {},\n    cashtag: {},\n    bot_command: {},\n    url: {},\n    email: {},\n    phone_number: {},\n    bold: {},\n    italic: {},\n    underline: {},\n    strikethrough: {},\n    spoiler: {},\n    blockquote: {},\n    expandable_blockquote: {},\n    code: {},\n    pre: {},\n    text_link: {},\n    text_mention: {},\n    custom_emoji: {}\n};\nconst USER_KEYS = {\n    me: {},\n    is_bot: {},\n    is_premium: {},\n    added_to_attachment_menu: {}\n};\nconst FORWARD_ORIGIN_KEYS = {\n    user: {},\n    hidden_user: {},\n    chat: {},\n    channel: {}\n};\nconst STICKER_KEYS = {\n    is_video: {},\n    is_animated: {},\n    premium_animation: {}\n};\nconst REACTION_KEYS = {\n    emoji: {},\n    custom_emoji: {},\n    paid: {}\n};\nconst COMMON_MESSAGE_KEYS = {\n    forward_origin: FORWARD_ORIGIN_KEYS,\n    is_topic_message: {},\n    is_automatic_forward: {},\n    business_connection_id: {},\n    text: {},\n    animation: {},\n    audio: {},\n    document: {},\n    paid_media: {},\n    photo: {},\n    sticker: STICKER_KEYS,\n    story: {},\n    video: {},\n    video_note: {},\n    voice: {},\n    contact: {},\n    dice: {},\n    game: {},\n    poll: {},\n    venue: {},\n    location: {},\n    entities: ENTITY_KEYS,\n    caption_entities: ENTITY_KEYS,\n    caption: {},\n    effect_id: {},\n    has_media_spoiler: {},\n    new_chat_title: {},\n    new_chat_photo: {},\n    delete_chat_photo: {},\n    message_auto_delete_timer_changed: {},\n    pinned_message: {},\n    invoice: {},\n    proximity_alert_triggered: {},\n    chat_background_set: {},\n    giveaway_created: {},\n    giveaway: {\n        only_new_members: {},\n        has_public_winners: {}\n    },\n    giveaway_winners: {\n        only_new_members: {},\n        was_refunded: {}\n    },\n    giveaway_completed: {},\n    video_chat_scheduled: {},\n    video_chat_started: {},\n    video_chat_ended: {},\n    video_chat_participants_invited: {},\n    web_app_data: {}\n};\nconst MESSAGE_KEYS = {\n    ...COMMON_MESSAGE_KEYS,\n    new_chat_members: USER_KEYS,\n    left_chat_member: USER_KEYS,\n    group_chat_created: {},\n    supergroup_chat_created: {},\n    migrate_to_chat_id: {},\n    migrate_from_chat_id: {},\n    successful_payment: {},\n    refunded_payment: {},\n    users_shared: {},\n    chat_shared: {},\n    connected_website: {},\n    write_access_allowed: {},\n    passport_data: {},\n    boost_added: {},\n    forum_topic_created: {},\n    forum_topic_edited: {\n        name: {},\n        icon_custom_emoji_id: {}\n    },\n    forum_topic_closed: {},\n    forum_topic_reopened: {},\n    general_forum_topic_hidden: {},\n    general_forum_topic_unhidden: {},\n    sender_boost_count: {}\n};\nconst CHANNEL_POST_KEYS = {\n    ...COMMON_MESSAGE_KEYS,\n    channel_chat_created: {}\n};\nconst BUSINESS_CONNECTION_KEYS = {\n    can_reply: {},\n    is_enabled: {}\n};\nconst MESSAGE_REACTION_KEYS = {\n    old_reaction: REACTION_KEYS,\n    new_reaction: REACTION_KEYS\n};\nconst MESSAGE_REACTION_COUNT_UPDATED_KEYS = {\n    reactions: REACTION_KEYS\n};\nconst CALLBACK_QUERY_KEYS = {\n    data: {},\n    game_short_name: {}\n};\nconst CHAT_MEMBER_UPDATED_KEYS = {\n    from: USER_KEYS\n};\nconst UPDATE_KEYS = {\n    message: MESSAGE_KEYS,\n    edited_message: MESSAGE_KEYS,\n    channel_post: CHANNEL_POST_KEYS,\n    edited_channel_post: CHANNEL_POST_KEYS,\n    business_connection: BUSINESS_CONNECTION_KEYS,\n    business_message: MESSAGE_KEYS,\n    edited_business_message: MESSAGE_KEYS,\n    deleted_business_messages: {},\n    inline_query: {},\n    chosen_inline_result: {},\n    callback_query: CALLBACK_QUERY_KEYS,\n    shipping_query: {},\n    pre_checkout_query: {},\n    poll: {},\n    poll_answer: {},\n    my_chat_member: CHAT_MEMBER_UPDATED_KEYS,\n    chat_member: CHAT_MEMBER_UPDATED_KEYS,\n    chat_join_request: {},\n    message_reaction: MESSAGE_REACTION_KEYS,\n    message_reaction_count: MESSAGE_REACTION_COUNT_UPDATED_KEYS,\n    chat_boost: {},\n    removed_chat_boost: {},\n    purchased_paid_media: {}\n};\nconst L1_SHORTCUTS = {\n    \"\": [\n        \"message\",\n        \"channel_post\"\n    ],\n    msg: [\n        \"message\",\n        \"channel_post\"\n    ],\n    edit: [\n        \"edited_message\",\n        \"edited_channel_post\"\n    ]\n};\nconst L2_SHORTCUTS = {\n    \"\": [\n        \"entities\",\n        \"caption_entities\"\n    ],\n    media: [\n        \"photo\",\n        \"video\"\n    ],\n    file: [\n        \"photo\",\n        \"animation\",\n        \"audio\",\n        \"document\",\n        \"video\",\n        \"video_note\",\n        \"voice\",\n        \"sticker\"\n    ]\n};\nconst checker = {\n    filterQuery (filter) {\n        const pred = matchFilter(filter);\n        return (ctx)=>pred(ctx);\n    },\n    text (trigger) {\n        const hasText = checker.filterQuery([\n            \":text\",\n            \":caption\"\n        ]);\n        const trg = triggerFn(trigger);\n        return (ctx)=>{\n            if (!hasText(ctx)) return false;\n            const msg = ctx.message ?? ctx.channelPost;\n            const txt = msg.text ?? msg.caption;\n            return match(ctx, txt, trg);\n        };\n    },\n    command (command) {\n        const hasEntities = checker.filterQuery(\":entities:bot_command\");\n        const atCommands = new Set();\n        const noAtCommands = new Set();\n        toArray(command).forEach((cmd)=>{\n            if (cmd.startsWith(\"/\")) {\n                throw new Error(`Do not include '/' when registering command handlers (use '${cmd.substring(1)}' not '${cmd}')`);\n            }\n            const set = cmd.includes(\"@\") ? atCommands : noAtCommands;\n            set.add(cmd);\n        });\n        return (ctx)=>{\n            if (!hasEntities(ctx)) return false;\n            const msg = ctx.message ?? ctx.channelPost;\n            const txt = msg.text ?? msg.caption;\n            return msg.entities.some((e)=>{\n                if (e.type !== \"bot_command\") return false;\n                if (e.offset !== 0) return false;\n                const cmd = txt.substring(1, e.length);\n                if (noAtCommands.has(cmd) || atCommands.has(cmd)) {\n                    ctx.match = txt.substring(cmd.length + 1).trimStart();\n                    return true;\n                }\n                const index = cmd.indexOf(\"@\");\n                if (index === -1) return false;\n                const atTarget = cmd.substring(index + 1).toLowerCase();\n                const username = ctx.me.username.toLowerCase();\n                if (atTarget !== username) return false;\n                const atCommand = cmd.substring(0, index);\n                if (noAtCommands.has(atCommand)) {\n                    ctx.match = txt.substring(cmd.length + 1).trimStart();\n                    return true;\n                }\n                return false;\n            });\n        };\n    },\n    reaction (reaction) {\n        const hasMessageReaction = checker.filterQuery(\"message_reaction\");\n        const normalized = typeof reaction === \"string\" ? [\n            {\n                type: \"emoji\",\n                emoji: reaction\n            }\n        ] : (Array.isArray(reaction) ? reaction : [\n            reaction\n        ]).map((emoji)=>typeof emoji === \"string\" ? {\n                type: \"emoji\",\n                emoji\n            } : emoji);\n        const emoji = new Set(normalized.filter((r)=>r.type === \"emoji\").map((r)=>r.emoji));\n        const customEmoji = new Set(normalized.filter((r)=>r.type === \"custom_emoji\").map((r)=>r.custom_emoji_id));\n        const paid = normalized.some((r)=>r.type === \"paid\");\n        return (ctx)=>{\n            if (!hasMessageReaction(ctx)) return false;\n            const { old_reaction, new_reaction } = ctx.messageReaction;\n            for (const reaction of new_reaction){\n                let isOld = false;\n                if (reaction.type === \"emoji\") {\n                    for (const old of old_reaction){\n                        if (old.type !== \"emoji\") continue;\n                        if (old.emoji === reaction.emoji) {\n                            isOld = true;\n                            break;\n                        }\n                    }\n                } else if (reaction.type === \"custom_emoji\") {\n                    for (const old of old_reaction){\n                        if (old.type !== \"custom_emoji\") continue;\n                        if (old.custom_emoji_id === reaction.custom_emoji_id) {\n                            isOld = true;\n                            break;\n                        }\n                    }\n                } else if (reaction.type === \"paid\") {\n                    for (const old of old_reaction){\n                        if (old.type !== \"paid\") continue;\n                        isOld = true;\n                        break;\n                    }\n                } else {}\n                if (isOld) continue;\n                if (reaction.type === \"emoji\") {\n                    if (emoji.has(reaction.emoji)) return true;\n                } else if (reaction.type === \"custom_emoji\") {\n                    if (customEmoji.has(reaction.custom_emoji_id)) return true;\n                } else if (reaction.type === \"paid\") {\n                    if (paid) return true;\n                } else {\n                    return true;\n                }\n            }\n            return false;\n        };\n    },\n    chatType (chatType) {\n        const set = new Set(toArray(chatType));\n        return (ctx)=>ctx.chat?.type !== undefined && set.has(ctx.chat.type);\n    },\n    callbackQuery (trigger) {\n        const hasCallbackQuery = checker.filterQuery(\"callback_query:data\");\n        const trg = triggerFn(trigger);\n        return (ctx)=>hasCallbackQuery(ctx) && match(ctx, ctx.callbackQuery.data, trg);\n    },\n    gameQuery (trigger) {\n        const hasGameQuery = checker.filterQuery(\"callback_query:game_short_name\");\n        const trg = triggerFn(trigger);\n        return (ctx)=>hasGameQuery(ctx) && match(ctx, ctx.callbackQuery.game_short_name, trg);\n    },\n    inlineQuery (trigger) {\n        const hasInlineQuery = checker.filterQuery(\"inline_query\");\n        const trg = triggerFn(trigger);\n        return (ctx)=>hasInlineQuery(ctx) && match(ctx, ctx.inlineQuery.query, trg);\n    },\n    chosenInlineResult (trigger) {\n        const hasChosenInlineResult = checker.filterQuery(\"chosen_inline_result\");\n        const trg = triggerFn(trigger);\n        return (ctx)=>hasChosenInlineResult(ctx) && match(ctx, ctx.chosenInlineResult.result_id, trg);\n    },\n    preCheckoutQuery (trigger) {\n        const hasPreCheckoutQuery = checker.filterQuery(\"pre_checkout_query\");\n        const trg = triggerFn(trigger);\n        return (ctx)=>hasPreCheckoutQuery(ctx) && match(ctx, ctx.preCheckoutQuery.invoice_payload, trg);\n    },\n    shippingQuery (trigger) {\n        const hasShippingQuery = checker.filterQuery(\"shipping_query\");\n        const trg = triggerFn(trigger);\n        return (ctx)=>hasShippingQuery(ctx) && match(ctx, ctx.shippingQuery.invoice_payload, trg);\n    }\n};\nclass Context {\n    update;\n    api;\n    me;\n    match;\n    constructor(update, api, me){\n        this.update = update;\n        this.api = api;\n        this.me = me;\n    }\n    get message() {\n        return this.update.message;\n    }\n    get editedMessage() {\n        return this.update.edited_message;\n    }\n    get channelPost() {\n        return this.update.channel_post;\n    }\n    get editedChannelPost() {\n        return this.update.edited_channel_post;\n    }\n    get businessConnection() {\n        return this.update.business_connection;\n    }\n    get businessMessage() {\n        return this.update.business_message;\n    }\n    get editedBusinessMessage() {\n        return this.update.edited_business_message;\n    }\n    get deletedBusinessMessages() {\n        return this.update.deleted_business_messages;\n    }\n    get messageReaction() {\n        return this.update.message_reaction;\n    }\n    get messageReactionCount() {\n        return this.update.message_reaction_count;\n    }\n    get inlineQuery() {\n        return this.update.inline_query;\n    }\n    get chosenInlineResult() {\n        return this.update.chosen_inline_result;\n    }\n    get callbackQuery() {\n        return this.update.callback_query;\n    }\n    get shippingQuery() {\n        return this.update.shipping_query;\n    }\n    get preCheckoutQuery() {\n        return this.update.pre_checkout_query;\n    }\n    get poll() {\n        return this.update.poll;\n    }\n    get pollAnswer() {\n        return this.update.poll_answer;\n    }\n    get myChatMember() {\n        return this.update.my_chat_member;\n    }\n    get chatMember() {\n        return this.update.chat_member;\n    }\n    get chatJoinRequest() {\n        return this.update.chat_join_request;\n    }\n    get chatBoost() {\n        return this.update.chat_boost;\n    }\n    get removedChatBoost() {\n        return this.update.removed_chat_boost;\n    }\n    get purchasedPaidMedia() {\n        return this.update.purchased_paid_media;\n    }\n    get msg() {\n        return this.message ?? this.editedMessage ?? this.channelPost ?? this.editedChannelPost ?? this.businessMessage ?? this.editedBusinessMessage ?? this.callbackQuery?.message;\n    }\n    get chat() {\n        return (this.msg ?? this.deletedBusinessMessages ?? this.messageReaction ?? this.messageReactionCount ?? this.myChatMember ?? this.chatMember ?? this.chatJoinRequest ?? this.chatBoost ?? this.removedChatBoost)?.chat;\n    }\n    get senderChat() {\n        return this.msg?.sender_chat;\n    }\n    get from() {\n        return (this.businessConnection ?? this.messageReaction ?? (this.chatBoost?.boost ?? this.removedChatBoost)?.source)?.user ?? (this.callbackQuery ?? this.msg ?? this.inlineQuery ?? this.chosenInlineResult ?? this.shippingQuery ?? this.preCheckoutQuery ?? this.myChatMember ?? this.chatMember ?? this.chatJoinRequest ?? this.purchasedPaidMedia)?.from;\n    }\n    get msgId() {\n        return this.msg?.message_id ?? this.messageReaction?.message_id ?? this.messageReactionCount?.message_id;\n    }\n    get chatId() {\n        return this.chat?.id ?? this.businessConnection?.user_chat_id;\n    }\n    get inlineMessageId() {\n        return this.callbackQuery?.inline_message_id ?? this.chosenInlineResult?.inline_message_id;\n    }\n    get businessConnectionId() {\n        return this.msg?.business_connection_id ?? this.businessConnection?.id ?? this.deletedBusinessMessages?.business_connection_id;\n    }\n    entities(types) {\n        const message = this.msg;\n        if (message === undefined) return [];\n        const text = message.text ?? message.caption;\n        if (text === undefined) return [];\n        let entities = message.entities ?? message.caption_entities;\n        if (entities === undefined) return [];\n        if (types !== undefined) {\n            const filters = new Set(toArray(types));\n            entities = entities.filter((entity)=>filters.has(entity.type));\n        }\n        return entities.map((entity)=>({\n                ...entity,\n                text: text.substring(entity.offset, entity.offset + entity.length)\n            }));\n    }\n    reactions() {\n        const emoji = [];\n        const emojiAdded = [];\n        const emojiKept = [];\n        const emojiRemoved = [];\n        const customEmoji = [];\n        const customEmojiAdded = [];\n        const customEmojiKept = [];\n        const customEmojiRemoved = [];\n        let paid = false;\n        let paidAdded = false;\n        const r = this.messageReaction;\n        if (r !== undefined) {\n            const { old_reaction, new_reaction } = r;\n            for (const reaction of new_reaction){\n                if (reaction.type === \"emoji\") {\n                    emoji.push(reaction.emoji);\n                } else if (reaction.type === \"custom_emoji\") {\n                    customEmoji.push(reaction.custom_emoji_id);\n                } else if (reaction.type === \"paid\") {\n                    paid = paidAdded = true;\n                }\n            }\n            for (const reaction of old_reaction){\n                if (reaction.type === \"emoji\") {\n                    emojiRemoved.push(reaction.emoji);\n                } else if (reaction.type === \"custom_emoji\") {\n                    customEmojiRemoved.push(reaction.custom_emoji_id);\n                } else if (reaction.type === \"paid\") {\n                    paidAdded = false;\n                }\n            }\n            emojiAdded.push(...emoji);\n            customEmojiAdded.push(...customEmoji);\n            for(let i = 0; i < emojiRemoved.length; i++){\n                const len = emojiAdded.length;\n                if (len === 0) break;\n                const rem = emojiRemoved[i];\n                for(let j = 0; j < len; j++){\n                    if (rem === emojiAdded[j]) {\n                        emojiKept.push(rem);\n                        emojiRemoved.splice(i, 1);\n                        emojiAdded.splice(j, 1);\n                        i--;\n                        break;\n                    }\n                }\n            }\n            for(let i = 0; i < customEmojiRemoved.length; i++){\n                const len = customEmojiAdded.length;\n                if (len === 0) break;\n                const rem = customEmojiRemoved[i];\n                for(let j = 0; j < len; j++){\n                    if (rem === customEmojiAdded[j]) {\n                        customEmojiKept.push(rem);\n                        customEmojiRemoved.splice(i, 1);\n                        customEmojiAdded.splice(j, 1);\n                        i--;\n                        break;\n                    }\n                }\n            }\n        }\n        return {\n            emoji,\n            emojiAdded,\n            emojiKept,\n            emojiRemoved,\n            customEmoji,\n            customEmojiAdded,\n            customEmojiKept,\n            customEmojiRemoved,\n            paid,\n            paidAdded\n        };\n    }\n    static has = checker;\n    has(filter) {\n        return Context.has.filterQuery(filter)(this);\n    }\n    hasText(trigger) {\n        return Context.has.text(trigger)(this);\n    }\n    hasCommand(command) {\n        return Context.has.command(command)(this);\n    }\n    hasReaction(reaction) {\n        return Context.has.reaction(reaction)(this);\n    }\n    hasChatType(chatType) {\n        return Context.has.chatType(chatType)(this);\n    }\n    hasCallbackQuery(trigger) {\n        return Context.has.callbackQuery(trigger)(this);\n    }\n    hasGameQuery(trigger) {\n        return Context.has.gameQuery(trigger)(this);\n    }\n    hasInlineQuery(trigger) {\n        return Context.has.inlineQuery(trigger)(this);\n    }\n    hasChosenInlineResult(trigger) {\n        return Context.has.chosenInlineResult(trigger)(this);\n    }\n    hasPreCheckoutQuery(trigger) {\n        return Context.has.preCheckoutQuery(trigger)(this);\n    }\n    hasShippingQuery(trigger) {\n        return Context.has.shippingQuery(trigger)(this);\n    }\n    reply(text, other, signal) {\n        return this.api.sendMessage(orThrow(this.chatId, \"sendMessage\"), text, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    forwardMessage(chat_id, other, signal) {\n        return this.api.forwardMessage(chat_id, orThrow(this.chatId, \"forwardMessage\"), orThrow(this.msgId, \"forwardMessage\"), other, signal);\n    }\n    forwardMessages(chat_id, message_ids, other, signal) {\n        return this.api.forwardMessages(chat_id, orThrow(this.chatId, \"forwardMessages\"), message_ids, other, signal);\n    }\n    copyMessage(chat_id, other, signal) {\n        return this.api.copyMessage(chat_id, orThrow(this.chatId, \"copyMessage\"), orThrow(this.msgId, \"copyMessage\"), other, signal);\n    }\n    copyMessages(chat_id, message_ids, other, signal) {\n        return this.api.copyMessages(chat_id, orThrow(this.chatId, \"copyMessages\"), message_ids, other, signal);\n    }\n    replyWithPhoto(photo, other, signal) {\n        return this.api.sendPhoto(orThrow(this.chatId, \"sendPhoto\"), photo, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithAudio(audio, other, signal) {\n        return this.api.sendAudio(orThrow(this.chatId, \"sendAudio\"), audio, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithDocument(document1, other, signal) {\n        return this.api.sendDocument(orThrow(this.chatId, \"sendDocument\"), document1, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithVideo(video, other, signal) {\n        return this.api.sendVideo(orThrow(this.chatId, \"sendVideo\"), video, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithAnimation(animation, other, signal) {\n        return this.api.sendAnimation(orThrow(this.chatId, \"sendAnimation\"), animation, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithVoice(voice, other, signal) {\n        return this.api.sendVoice(orThrow(this.chatId, \"sendVoice\"), voice, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithVideoNote(video_note, other, signal) {\n        return this.api.sendVideoNote(orThrow(this.chatId, \"sendVideoNote\"), video_note, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithMediaGroup(media, other, signal) {\n        return this.api.sendMediaGroup(orThrow(this.chatId, \"sendMediaGroup\"), media, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithLocation(latitude, longitude, other, signal) {\n        return this.api.sendLocation(orThrow(this.chatId, \"sendLocation\"), latitude, longitude, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    editMessageLiveLocation(latitude, longitude, other, signal) {\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined ? this.api.editMessageLiveLocationInline(inlineId, latitude, longitude, other) : this.api.editMessageLiveLocation(orThrow(this.chatId, \"editMessageLiveLocation\"), orThrow(this.msgId, \"editMessageLiveLocation\"), latitude, longitude, other, signal);\n    }\n    stopMessageLiveLocation(other, signal) {\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined ? this.api.stopMessageLiveLocationInline(inlineId, other) : this.api.stopMessageLiveLocation(orThrow(this.chatId, \"stopMessageLiveLocation\"), orThrow(this.msgId, \"stopMessageLiveLocation\"), other, signal);\n    }\n    sendPaidMedia(star_count, media, other, signal) {\n        return this.api.sendPaidMedia(orThrow(this.chatId, \"sendPaidMedia\"), star_count, media, other, signal);\n    }\n    replyWithVenue(latitude, longitude, title, address, other, signal) {\n        return this.api.sendVenue(orThrow(this.chatId, \"sendVenue\"), latitude, longitude, title, address, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithContact(phone_number, first_name, other, signal) {\n        return this.api.sendContact(orThrow(this.chatId, \"sendContact\"), phone_number, first_name, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithPoll(question, options, other, signal) {\n        return this.api.sendPoll(orThrow(this.chatId, \"sendPoll\"), question, options, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithDice(emoji, other, signal) {\n        return this.api.sendDice(orThrow(this.chatId, \"sendDice\"), emoji, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    replyWithChatAction(action, other, signal) {\n        return this.api.sendChatAction(orThrow(this.chatId, \"sendChatAction\"), action, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    react(reaction, other, signal) {\n        return this.api.setMessageReaction(orThrow(this.chatId, \"setMessageReaction\"), orThrow(this.msgId, \"setMessageReaction\"), typeof reaction === \"string\" ? [\n            {\n                type: \"emoji\",\n                emoji: reaction\n            }\n        ] : (Array.isArray(reaction) ? reaction : [\n            reaction\n        ]).map((emoji)=>typeof emoji === \"string\" ? {\n                type: \"emoji\",\n                emoji\n            } : emoji), other, signal);\n    }\n    getUserProfilePhotos(other, signal) {\n        return this.api.getUserProfilePhotos(orThrow(this.from, \"getUserProfilePhotos\").id, other, signal);\n    }\n    setUserEmojiStatus(other, signal) {\n        return this.api.setUserEmojiStatus(orThrow(this.from, \"setUserEmojiStatus\").id, other, signal);\n    }\n    getUserChatBoosts(chat_id, signal) {\n        return this.api.getUserChatBoosts(chat_id, orThrow(this.from, \"getUserChatBoosts\").id, signal);\n    }\n    getBusinessConnection(signal) {\n        return this.api.getBusinessConnection(orThrow(this.businessConnectionId, \"getBusinessConnection\"), signal);\n    }\n    getFile(signal) {\n        const m = orThrow(this.msg, \"getFile\");\n        const file = m.photo !== undefined ? m.photo[m.photo.length - 1] : m.animation ?? m.audio ?? m.document ?? m.video ?? m.video_note ?? m.voice ?? m.sticker;\n        return this.api.getFile(orThrow(file, \"getFile\").file_id, signal);\n    }\n    kickAuthor(...args) {\n        return this.banAuthor(...args);\n    }\n    banAuthor(other, signal) {\n        return this.api.banChatMember(orThrow(this.chatId, \"banAuthor\"), orThrow(this.from, \"banAuthor\").id, other, signal);\n    }\n    kickChatMember(...args) {\n        return this.banChatMember(...args);\n    }\n    banChatMember(user_id, other, signal) {\n        return this.api.banChatMember(orThrow(this.chatId, \"banChatMember\"), user_id, other, signal);\n    }\n    unbanChatMember(user_id, other, signal) {\n        return this.api.unbanChatMember(orThrow(this.chatId, \"unbanChatMember\"), user_id, other, signal);\n    }\n    restrictAuthor(permissions, other, signal) {\n        return this.api.restrictChatMember(orThrow(this.chatId, \"restrictAuthor\"), orThrow(this.from, \"restrictAuthor\").id, permissions, other, signal);\n    }\n    restrictChatMember(user_id, permissions, other, signal) {\n        return this.api.restrictChatMember(orThrow(this.chatId, \"restrictChatMember\"), user_id, permissions, other, signal);\n    }\n    promoteAuthor(other, signal) {\n        return this.api.promoteChatMember(orThrow(this.chatId, \"promoteAuthor\"), orThrow(this.from, \"promoteAuthor\").id, other, signal);\n    }\n    promoteChatMember(user_id, other, signal) {\n        return this.api.promoteChatMember(orThrow(this.chatId, \"promoteChatMember\"), user_id, other, signal);\n    }\n    setChatAdministratorAuthorCustomTitle(custom_title, signal) {\n        return this.api.setChatAdministratorCustomTitle(orThrow(this.chatId, \"setChatAdministratorAuthorCustomTitle\"), orThrow(this.from, \"setChatAdministratorAuthorCustomTitle\").id, custom_title, signal);\n    }\n    setChatAdministratorCustomTitle(user_id, custom_title, signal) {\n        return this.api.setChatAdministratorCustomTitle(orThrow(this.chatId, \"setChatAdministratorCustomTitle\"), user_id, custom_title, signal);\n    }\n    banChatSenderChat(sender_chat_id, signal) {\n        return this.api.banChatSenderChat(orThrow(this.chatId, \"banChatSenderChat\"), sender_chat_id, signal);\n    }\n    unbanChatSenderChat(sender_chat_id, signal) {\n        return this.api.unbanChatSenderChat(orThrow(this.chatId, \"unbanChatSenderChat\"), sender_chat_id, signal);\n    }\n    setChatPermissions(permissions, other, signal) {\n        return this.api.setChatPermissions(orThrow(this.chatId, \"setChatPermissions\"), permissions, other, signal);\n    }\n    exportChatInviteLink(signal) {\n        return this.api.exportChatInviteLink(orThrow(this.chatId, \"exportChatInviteLink\"), signal);\n    }\n    createChatInviteLink(other, signal) {\n        return this.api.createChatInviteLink(orThrow(this.chatId, \"createChatInviteLink\"), other, signal);\n    }\n    editChatInviteLink(invite_link, other, signal) {\n        return this.api.editChatInviteLink(orThrow(this.chatId, \"editChatInviteLink\"), invite_link, other, signal);\n    }\n    createChatSubscriptionInviteLink(subscription_period, subscription_price, other, signal) {\n        return this.api.createChatSubscriptionInviteLink(orThrow(this.chatId, \"createChatSubscriptionInviteLink\"), subscription_period, subscription_price, other, signal);\n    }\n    editChatSubscriptionInviteLink(invite_link, other, signal) {\n        return this.api.editChatSubscriptionInviteLink(orThrow(this.chatId, \"editChatSubscriptionInviteLink\"), invite_link, other, signal);\n    }\n    revokeChatInviteLink(invite_link, signal) {\n        return this.api.revokeChatInviteLink(orThrow(this.chatId, \"editChatInviteLink\"), invite_link, signal);\n    }\n    approveChatJoinRequest(user_id, signal) {\n        return this.api.approveChatJoinRequest(orThrow(this.chatId, \"approveChatJoinRequest\"), user_id, signal);\n    }\n    declineChatJoinRequest(user_id, signal) {\n        return this.api.declineChatJoinRequest(orThrow(this.chatId, \"declineChatJoinRequest\"), user_id, signal);\n    }\n    setChatPhoto(photo, signal) {\n        return this.api.setChatPhoto(orThrow(this.chatId, \"setChatPhoto\"), photo, signal);\n    }\n    deleteChatPhoto(signal) {\n        return this.api.deleteChatPhoto(orThrow(this.chatId, \"deleteChatPhoto\"), signal);\n    }\n    setChatTitle(title, signal) {\n        return this.api.setChatTitle(orThrow(this.chatId, \"setChatTitle\"), title, signal);\n    }\n    setChatDescription(description, signal) {\n        return this.api.setChatDescription(orThrow(this.chatId, \"setChatDescription\"), description, signal);\n    }\n    pinChatMessage(message_id, other, signal) {\n        return this.api.pinChatMessage(orThrow(this.chatId, \"pinChatMessage\"), message_id, other, signal);\n    }\n    unpinChatMessage(message_id, signal) {\n        return this.api.unpinChatMessage(orThrow(this.chatId, \"unpinChatMessage\"), message_id, signal);\n    }\n    unpinAllChatMessages(signal) {\n        return this.api.unpinAllChatMessages(orThrow(this.chatId, \"unpinAllChatMessages\"), signal);\n    }\n    leaveChat(signal) {\n        return this.api.leaveChat(orThrow(this.chatId, \"leaveChat\"), signal);\n    }\n    getChat(signal) {\n        return this.api.getChat(orThrow(this.chatId, \"getChat\"), signal);\n    }\n    getChatAdministrators(signal) {\n        return this.api.getChatAdministrators(orThrow(this.chatId, \"getChatAdministrators\"), signal);\n    }\n    getChatMembersCount(...args) {\n        return this.getChatMemberCount(...args);\n    }\n    getChatMemberCount(signal) {\n        return this.api.getChatMemberCount(orThrow(this.chatId, \"getChatMemberCount\"), signal);\n    }\n    getAuthor(signal) {\n        return this.api.getChatMember(orThrow(this.chatId, \"getAuthor\"), orThrow(this.from, \"getAuthor\").id, signal);\n    }\n    getChatMember(user_id, signal) {\n        return this.api.getChatMember(orThrow(this.chatId, \"getChatMember\"), user_id, signal);\n    }\n    setChatStickerSet(sticker_set_name, signal) {\n        return this.api.setChatStickerSet(orThrow(this.chatId, \"setChatStickerSet\"), sticker_set_name, signal);\n    }\n    deleteChatStickerSet(signal) {\n        return this.api.deleteChatStickerSet(orThrow(this.chatId, \"deleteChatStickerSet\"), signal);\n    }\n    createForumTopic(name, other, signal) {\n        return this.api.createForumTopic(orThrow(this.chatId, \"createForumTopic\"), name, other, signal);\n    }\n    editForumTopic(other, signal) {\n        const message = orThrow(this.msg, \"editForumTopic\");\n        const thread = orThrow(message.message_thread_id, \"editForumTopic\");\n        return this.api.editForumTopic(message.chat.id, thread, other, signal);\n    }\n    closeForumTopic(signal) {\n        const message = orThrow(this.msg, \"closeForumTopic\");\n        const thread = orThrow(message.message_thread_id, \"closeForumTopic\");\n        return this.api.closeForumTopic(message.chat.id, thread, signal);\n    }\n    reopenForumTopic(signal) {\n        const message = orThrow(this.msg, \"reopenForumTopic\");\n        const thread = orThrow(message.message_thread_id, \"reopenForumTopic\");\n        return this.api.reopenForumTopic(message.chat.id, thread, signal);\n    }\n    deleteForumTopic(signal) {\n        const message = orThrow(this.msg, \"deleteForumTopic\");\n        const thread = orThrow(message.message_thread_id, \"deleteForumTopic\");\n        return this.api.deleteForumTopic(message.chat.id, thread, signal);\n    }\n    unpinAllForumTopicMessages(signal) {\n        const message = orThrow(this.msg, \"unpinAllForumTopicMessages\");\n        const thread = orThrow(message.message_thread_id, \"unpinAllForumTopicMessages\");\n        return this.api.unpinAllForumTopicMessages(message.chat.id, thread, signal);\n    }\n    editGeneralForumTopic(name, signal) {\n        return this.api.editGeneralForumTopic(orThrow(this.chatId, \"editGeneralForumTopic\"), name, signal);\n    }\n    closeGeneralForumTopic(signal) {\n        return this.api.closeGeneralForumTopic(orThrow(this.chatId, \"closeGeneralForumTopic\"), signal);\n    }\n    reopenGeneralForumTopic(signal) {\n        return this.api.reopenGeneralForumTopic(orThrow(this.chatId, \"reopenGeneralForumTopic\"), signal);\n    }\n    hideGeneralForumTopic(signal) {\n        return this.api.hideGeneralForumTopic(orThrow(this.chatId, \"hideGeneralForumTopic\"), signal);\n    }\n    unhideGeneralForumTopic(signal) {\n        return this.api.unhideGeneralForumTopic(orThrow(this.chatId, \"unhideGeneralForumTopic\"), signal);\n    }\n    unpinAllGeneralForumTopicMessages(signal) {\n        return this.api.unpinAllGeneralForumTopicMessages(orThrow(this.chatId, \"unpinAllGeneralForumTopicMessages\"), signal);\n    }\n    answerCallbackQuery(other, signal) {\n        return this.api.answerCallbackQuery(orThrow(this.callbackQuery, \"answerCallbackQuery\").id, typeof other === \"string\" ? {\n            text: other\n        } : other, signal);\n    }\n    setChatMenuButton(other, signal) {\n        return this.api.setChatMenuButton(other, signal);\n    }\n    getChatMenuButton(other, signal) {\n        return this.api.getChatMenuButton(other, signal);\n    }\n    setMyDefaultAdministratorRights(other, signal) {\n        return this.api.setMyDefaultAdministratorRights(other, signal);\n    }\n    getMyDefaultAdministratorRights(other, signal) {\n        return this.api.getMyDefaultAdministratorRights(other, signal);\n    }\n    editMessageText(text, other, signal) {\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined ? this.api.editMessageTextInline(inlineId, text, other) : this.api.editMessageText(orThrow(this.chatId, \"editMessageText\"), orThrow(this.msg?.message_id ?? this.messageReaction?.message_id ?? this.messageReactionCount?.message_id, \"editMessageText\"), text, other, signal);\n    }\n    editMessageCaption(other, signal) {\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined ? this.api.editMessageCaptionInline(inlineId, other) : this.api.editMessageCaption(orThrow(this.chatId, \"editMessageCaption\"), orThrow(this.msg?.message_id ?? this.messageReaction?.message_id ?? this.messageReactionCount?.message_id, \"editMessageCaption\"), other, signal);\n    }\n    editMessageMedia(media, other, signal) {\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined ? this.api.editMessageMediaInline(inlineId, media, other) : this.api.editMessageMedia(orThrow(this.chatId, \"editMessageMedia\"), orThrow(this.msg?.message_id ?? this.messageReaction?.message_id ?? this.messageReactionCount?.message_id, \"editMessageMedia\"), media, other, signal);\n    }\n    editMessageReplyMarkup(other, signal) {\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined ? this.api.editMessageReplyMarkupInline(inlineId, other) : this.api.editMessageReplyMarkup(orThrow(this.chatId, \"editMessageReplyMarkup\"), orThrow(this.msg?.message_id ?? this.messageReaction?.message_id ?? this.messageReactionCount?.message_id, \"editMessageReplyMarkup\"), other, signal);\n    }\n    stopPoll(other, signal) {\n        return this.api.stopPoll(orThrow(this.chatId, \"stopPoll\"), orThrow(this.msg?.message_id ?? this.messageReaction?.message_id ?? this.messageReactionCount?.message_id, \"stopPoll\"), other, signal);\n    }\n    deleteMessage(signal) {\n        return this.api.deleteMessage(orThrow(this.chatId, \"deleteMessage\"), orThrow(this.msg?.message_id ?? this.messageReaction?.message_id ?? this.messageReactionCount?.message_id, \"deleteMessage\"), signal);\n    }\n    deleteMessages(message_ids, signal) {\n        return this.api.deleteMessages(orThrow(this.chatId, \"deleteMessages\"), message_ids, signal);\n    }\n    replyWithSticker(sticker, other, signal) {\n        return this.api.sendSticker(orThrow(this.chatId, \"sendSticker\"), sticker, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n    getCustomEmojiStickers(signal) {\n        return this.api.getCustomEmojiStickers((this.msg?.entities ?? []).filter((e)=>e.type === \"custom_emoji\").map((e)=>e.custom_emoji_id), signal);\n    }\n    replyWithGift(gift_id, other, signal) {\n        return this.api.sendGift(orThrow(this.from, \"sendGift\").id, gift_id, other, signal);\n    }\n    answerInlineQuery(results, other, signal) {\n        return this.api.answerInlineQuery(orThrow(this.inlineQuery, \"answerInlineQuery\").id, results, other, signal);\n    }\n    savePreparedInlineMessage(result, other, signal) {\n        return this.api.savePreparedInlineMessage(orThrow(this.from, \"savePreparedInlineMessage\").id, result, other, signal);\n    }\n    replyWithInvoice(title, description, payload, currency, prices, other, signal) {\n        return this.api.sendInvoice(orThrow(this.chatId, \"sendInvoice\"), title, description, payload, currency, prices, other, signal);\n    }\n    answerShippingQuery(ok, other, signal) {\n        return this.api.answerShippingQuery(orThrow(this.shippingQuery, \"answerShippingQuery\").id, ok, other, signal);\n    }\n    answerPreCheckoutQuery(ok, other, signal) {\n        return this.api.answerPreCheckoutQuery(orThrow(this.preCheckoutQuery, \"answerPreCheckoutQuery\").id, ok, typeof other === \"string\" ? {\n            error_message: other\n        } : other, signal);\n    }\n    refundStarPayment(signal) {\n        return this.api.refundStarPayment(orThrow(this.from, \"refundStarPayment\").id, orThrow(this.msg?.successful_payment, \"refundStarPayment\").telegram_payment_charge_id, signal);\n    }\n    editUserStarSubscription(telegram_payment_charge_id, is_canceled, signal) {\n        return this.api.editUserStarSubscription(orThrow(this.from, \"editUserStarSubscription\").id, telegram_payment_charge_id, is_canceled, signal);\n    }\n    verifyUser(other, signal) {\n        return this.api.verifyUser(orThrow(this.from, \"verifyUser\").id, other, signal);\n    }\n    verifyChat(other, signal) {\n        return this.api.verifyChat(orThrow(this.chatId, \"verifyChat\"), other, signal);\n    }\n    removeUserVerification(signal) {\n        return this.api.removeUserVerification(orThrow(this.from, \"removeUserVerification\").id, signal);\n    }\n    removeChatVerification(signal) {\n        return this.api.removeChatVerification(orThrow(this.chatId, \"removeChatVerification\"), signal);\n    }\n    setPassportDataErrors(errors, signal) {\n        return this.api.setPassportDataErrors(orThrow(this.from, \"setPassportDataErrors\").id, errors, signal);\n    }\n    replyWithGame(game_short_name, other, signal) {\n        return this.api.sendGame(orThrow(this.chatId, \"sendGame\"), game_short_name, {\n            business_connection_id: this.businessConnectionId,\n            ...other\n        }, signal);\n    }\n}\nfunction orThrow(value, method) {\n    if (value === undefined) {\n        throw new Error(`Missing information for API call to ${method}`);\n    }\n    return value;\n}\nfunction triggerFn(trigger) {\n    return toArray(trigger).map((t)=>typeof t === \"string\" ? (txt)=>txt === t ? t : null : (txt)=>txt.match(t));\n}\nfunction match(ctx, content, triggers) {\n    for (const t of triggers){\n        const res = t(content);\n        if (res) {\n            ctx.match = res;\n            return true;\n        }\n    }\n    return false;\n}\nfunction toArray(e) {\n    return Array.isArray(e) ? e : [\n        e\n    ];\n}\nclass BotError extends Error {\n    error;\n    ctx;\n    constructor(error, ctx){\n        super(generateBotErrorMessage(error));\n        this.error = error;\n        this.ctx = ctx;\n        this.name = \"BotError\";\n        if (error instanceof Error) this.stack = error.stack;\n    }\n}\nfunction generateBotErrorMessage(error) {\n    let msg;\n    if (error instanceof Error) {\n        msg = `${error.name} in middleware: ${error.message}`;\n    } else {\n        const type = typeof error;\n        msg = `Non-error value of type ${type} thrown in middleware`;\n        switch(type){\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"symbol\":\n                msg += `: ${error}`;\n                break;\n            case \"string\":\n                msg += `: ${String(error).substring(0, 50)}`;\n                break;\n            default:\n                msg += \"!\";\n                break;\n        }\n    }\n    return msg;\n}\nfunction flatten(mw) {\n    return typeof mw === \"function\" ? mw : (ctx, next)=>mw.middleware()(ctx, next);\n}\nfunction concat1(first, andThen) {\n    return async (ctx, next)=>{\n        let nextCalled = false;\n        await first(ctx, async ()=>{\n            if (nextCalled) throw new Error(\"`next` already called before!\");\n            else nextCalled = true;\n            await andThen(ctx, next);\n        });\n    };\n}\nfunction pass(_ctx, next) {\n    return next();\n}\nconst leaf1 = ()=>Promise.resolve();\nasync function run(middleware, ctx) {\n    await middleware(ctx, leaf1);\n}\nclass Composer {\n    handler;\n    constructor(...middleware){\n        this.handler = middleware.length === 0 ? pass : middleware.map(flatten).reduce(concat1);\n    }\n    middleware() {\n        return this.handler;\n    }\n    use(...middleware) {\n        const composer = new Composer(...middleware);\n        this.handler = concat1(this.handler, flatten(composer));\n        return composer;\n    }\n    on(filter, ...middleware) {\n        return this.filter(Context.has.filterQuery(filter), ...middleware);\n    }\n    hears(trigger, ...middleware) {\n        return this.filter(Context.has.text(trigger), ...middleware);\n    }\n    command(command, ...middleware) {\n        return this.filter(Context.has.command(command), ...middleware);\n    }\n    reaction(reaction, ...middleware) {\n        return this.filter(Context.has.reaction(reaction), ...middleware);\n    }\n    chatType(chatType, ...middleware) {\n        return this.filter(Context.has.chatType(chatType), ...middleware);\n    }\n    callbackQuery(trigger, ...middleware) {\n        return this.filter(Context.has.callbackQuery(trigger), ...middleware);\n    }\n    gameQuery(trigger, ...middleware) {\n        return this.filter(Context.has.gameQuery(trigger), ...middleware);\n    }\n    inlineQuery(trigger, ...middleware) {\n        return this.filter(Context.has.inlineQuery(trigger), ...middleware);\n    }\n    chosenInlineResult(resultId, ...middleware) {\n        return this.filter(Context.has.chosenInlineResult(resultId), ...middleware);\n    }\n    preCheckoutQuery(trigger, ...middleware) {\n        return this.filter(Context.has.preCheckoutQuery(trigger), ...middleware);\n    }\n    shippingQuery(trigger, ...middleware) {\n        return this.filter(Context.has.shippingQuery(trigger), ...middleware);\n    }\n    filter(predicate, ...middleware) {\n        const composer = new Composer(...middleware);\n        this.branch(predicate, composer, pass);\n        return composer;\n    }\n    drop(predicate, ...middleware) {\n        return this.filter(async (ctx)=>!await predicate(ctx), ...middleware);\n    }\n    fork(...middleware) {\n        const composer = new Composer(...middleware);\n        const fork = flatten(composer);\n        this.use((ctx, next)=>Promise.all([\n                next(),\n                run(fork, ctx)\n            ]));\n        return composer;\n    }\n    lazy(middlewareFactory) {\n        return this.use(async (ctx, next)=>{\n            const middleware = await middlewareFactory(ctx);\n            const arr = Array.isArray(middleware) ? middleware : [\n                middleware\n            ];\n            await flatten(new Composer(...arr))(ctx, next);\n        });\n    }\n    route(router, routeHandlers, fallback = pass) {\n        return this.lazy(async (ctx)=>{\n            const route = await router(ctx);\n            return (route === undefined || !routeHandlers[route] ? fallback : routeHandlers[route]) ?? [];\n        });\n    }\n    branch(predicate, trueMiddleware, falseMiddleware) {\n        return this.lazy(async (ctx)=>await predicate(ctx) ? trueMiddleware : falseMiddleware);\n    }\n    errorBoundary(errorHandler, ...middleware) {\n        const composer = new Composer(...middleware);\n        const bound = flatten(composer);\n        this.use(async (ctx, next)=>{\n            let nextCalled = false;\n            const cont = ()=>(nextCalled = true, Promise.resolve());\n            try {\n                await bound(ctx, cont);\n            } catch (err) {\n                nextCalled = false;\n                await errorHandler(new BotError(err, ctx), cont);\n            }\n            if (nextCalled) await next();\n        });\n        return composer;\n    }\n}\nvar s = 1e3;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\nvar ms = function(val, options) {\n    options = options || {};\n    var type = typeof val;\n    if (type === \"string\" && val.length > 0) {\n        return parse1(val);\n    } else if (type === \"number\" && isFinite(val)) {\n        return options.long ? fmtLong(val) : fmtShort(val);\n    }\n    throw new Error(\"val is not a non-empty string or a valid number. val=\" + JSON.stringify(val));\n};\nfunction parse1(str) {\n    str = String(str);\n    if (str.length > 100) {\n        return;\n    }\n    var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n    if (!match) {\n        return;\n    }\n    var n = parseFloat(match[1]);\n    var type = (match[2] || \"ms\").toLowerCase();\n    switch(type){\n        case \"years\":\n        case \"year\":\n        case \"yrs\":\n        case \"yr\":\n        case \"y\":\n            return n * y;\n        case \"weeks\":\n        case \"week\":\n        case \"w\":\n            return n * w;\n        case \"days\":\n        case \"day\":\n        case \"d\":\n            return n * d;\n        case \"hours\":\n        case \"hour\":\n        case \"hrs\":\n        case \"hr\":\n        case \"h\":\n            return n * h;\n        case \"minutes\":\n        case \"minute\":\n        case \"mins\":\n        case \"min\":\n        case \"m\":\n            return n * m;\n        case \"seconds\":\n        case \"second\":\n        case \"secs\":\n        case \"sec\":\n        case \"s\":\n            return n * s;\n        case \"milliseconds\":\n        case \"millisecond\":\n        case \"msecs\":\n        case \"msec\":\n        case \"ms\":\n            return n;\n        default:\n            return void 0;\n    }\n}\nfunction fmtShort(ms2) {\n    var msAbs = Math.abs(ms2);\n    if (msAbs >= d) {\n        return Math.round(ms2 / d) + \"d\";\n    }\n    if (msAbs >= h) {\n        return Math.round(ms2 / h) + \"h\";\n    }\n    if (msAbs >= m) {\n        return Math.round(ms2 / m) + \"m\";\n    }\n    if (msAbs >= s) {\n        return Math.round(ms2 / s) + \"s\";\n    }\n    return ms2 + \"ms\";\n}\nfunction fmtLong(ms2) {\n    var msAbs = Math.abs(ms2);\n    if (msAbs >= d) {\n        return plural(ms2, msAbs, d, \"day\");\n    }\n    if (msAbs >= h) {\n        return plural(ms2, msAbs, h, \"hour\");\n    }\n    if (msAbs >= m) {\n        return plural(ms2, msAbs, m, \"minute\");\n    }\n    if (msAbs >= s) {\n        return plural(ms2, msAbs, s, \"second\");\n    }\n    return ms2 + \" ms\";\n}\nfunction plural(ms2, msAbs, n, name) {\n    var isPlural = msAbs >= n * 1.5;\n    return Math.round(ms2 / n) + \" \" + name + (isPlural ? \"s\" : \"\");\n}\nfunction defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nvar globalContext;\nif (typeof window !== \"undefined\") {\n    globalContext = window;\n} else if (typeof self !== \"undefined\") {\n    globalContext = self;\n} else {\n    globalContext = {};\n}\nif (typeof globalContext.setTimeout === \"function\") {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof globalContext.clearTimeout === \"function\") {\n    cachedClearTimeout = clearTimeout;\n}\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        return setTimeout(fun, 0);\n    }\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e2) {\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        return clearTimeout(marker);\n    }\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            return cachedClearTimeout.call(null, marker);\n        } catch (e2) {\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n    while(len){\n        currentQueue = queue;\n        queue = [];\n        while(++queueIndex < len){\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for(var i = 1; i < arguments.length; i++){\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\nvar title = \"browser\";\nvar platform = \"browser\";\nvar browser = true;\nvar argv = [];\nvar version = \"\";\nvar versions = {};\nvar release = {};\nvar config = {};\nfunction noop() {}\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\nfunction binding(name) {\n    throw new Error(\"process.binding is not supported\");\n}\nfunction cwd() {\n    return \"/\";\n}\nfunction chdir(dir) {\n    throw new Error(\"process.chdir is not supported\");\n}\nfunction umask() {\n    return 0;\n}\nvar performance = globalContext.performance || {};\nvar performanceNow = performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow || function() {\n    return new Date().getTime();\n};\nfunction hrtime(previousTimestamp) {\n    var clocktime = performanceNow.call(performance) * 1e-3;\n    var seconds = Math.floor(clocktime);\n    var nanoseconds = Math.floor(clocktime % 1 * 1e9);\n    if (previousTimestamp) {\n        seconds = seconds - previousTimestamp[0];\n        nanoseconds = nanoseconds - previousTimestamp[1];\n        if (nanoseconds < 0) {\n            seconds--;\n            nanoseconds += 1e9;\n        }\n    }\n    return [\n        seconds,\n        nanoseconds\n    ];\n}\nvar startTime = new Date();\nfunction uptime() {\n    var currentTime = new Date();\n    var dif = currentTime - startTime;\n    return dif / 1e3;\n}\nvar process = {\n    nextTick,\n    title,\n    browser,\n    env: {\n        NODE_ENV: \"production\"\n    },\n    argv,\n    version,\n    versions,\n    on,\n    addListener,\n    once,\n    off,\n    removeListener,\n    removeAllListeners,\n    emit,\n    binding,\n    cwd,\n    chdir,\n    umask,\n    hrtime,\n    platform,\n    release,\n    config,\n    uptime\n};\nfunction createCommonjsModule(fn, basedir, module) {\n    return module = {\n        path: basedir,\n        exports: {},\n        require: function(path, base) {\n            return commonjsRequire(path, base === void 0 || base === null ? module.path : base);\n        }\n    }, fn(module, module.exports), module.exports;\n}\nfunction commonjsRequire() {\n    throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n}\nfunction setup(env) {\n    createDebug.debug = createDebug;\n    createDebug.default = createDebug;\n    createDebug.coerce = coerce;\n    createDebug.disable = disable;\n    createDebug.enable = enable;\n    createDebug.enabled = enabled;\n    createDebug.humanize = ms;\n    createDebug.destroy = destroy2;\n    Object.keys(env).forEach((key)=>{\n        createDebug[key] = env[key];\n    });\n    createDebug.names = [];\n    createDebug.skips = [];\n    createDebug.formatters = {};\n    function selectColor(namespace) {\n        let hash = 0;\n        for(let i = 0; i < namespace.length; i++){\n            hash = (hash << 5) - hash + namespace.charCodeAt(i);\n            hash |= 0;\n        }\n        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n    }\n    createDebug.selectColor = selectColor;\n    function createDebug(namespace) {\n        let prevTime;\n        let enableOverride = null;\n        let namespacesCache;\n        let enabledCache;\n        function debug(...args) {\n            if (!debug.enabled) {\n                return;\n            }\n            const self2 = debug;\n            const curr = Number(new Date());\n            const ms2 = curr - (prevTime || curr);\n            self2.diff = ms2;\n            self2.prev = prevTime;\n            self2.curr = curr;\n            prevTime = curr;\n            args[0] = createDebug.coerce(args[0]);\n            if (typeof args[0] !== \"string\") {\n                args.unshift(\"%O\");\n            }\n            let index = 0;\n            args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format)=>{\n                if (match === \"%%\") {\n                    return \"%\";\n                }\n                index++;\n                const formatter = createDebug.formatters[format];\n                if (typeof formatter === \"function\") {\n                    const val = args[index];\n                    match = formatter.call(self2, val);\n                    args.splice(index, 1);\n                    index--;\n                }\n                return match;\n            });\n            createDebug.formatArgs.call(self2, args);\n            const logFn = self2.log || createDebug.log;\n            logFn.apply(self2, args);\n        }\n        debug.namespace = namespace;\n        debug.useColors = createDebug.useColors();\n        debug.color = createDebug.selectColor(namespace);\n        debug.extend = extend;\n        debug.destroy = createDebug.destroy;\n        Object.defineProperty(debug, \"enabled\", {\n            enumerable: true,\n            configurable: false,\n            get: ()=>{\n                if (enableOverride !== null) {\n                    return enableOverride;\n                }\n                if (namespacesCache !== createDebug.namespaces) {\n                    namespacesCache = createDebug.namespaces;\n                    enabledCache = createDebug.enabled(namespace);\n                }\n                return enabledCache;\n            },\n            set: (v)=>{\n                enableOverride = v;\n            }\n        });\n        if (typeof createDebug.init === \"function\") {\n            createDebug.init(debug);\n        }\n        return debug;\n    }\n    function extend(namespace, delimiter) {\n        const newDebug = createDebug(this.namespace + (typeof delimiter === \"undefined\" ? \":\" : delimiter) + namespace);\n        newDebug.log = this.log;\n        return newDebug;\n    }\n    function enable(namespaces) {\n        createDebug.save(namespaces);\n        createDebug.namespaces = namespaces;\n        createDebug.names = [];\n        createDebug.skips = [];\n        let i;\n        const split = (typeof namespaces === \"string\" ? namespaces : \"\").split(/[\\s,]+/);\n        const len = split.length;\n        for(i = 0; i < len; i++){\n            if (!split[i]) {\n                continue;\n            }\n            namespaces = split[i].replace(/\\*/g, \".*?\");\n            if (namespaces[0] === \"-\") {\n                createDebug.skips.push(new RegExp(\"^\" + namespaces.slice(1) + \"$\"));\n            } else {\n                createDebug.names.push(new RegExp(\"^\" + namespaces + \"$\"));\n            }\n        }\n    }\n    function disable() {\n        const namespaces = [\n            ...createDebug.names.map(toNamespace),\n            ...createDebug.skips.map(toNamespace).map((namespace)=>\"-\" + namespace)\n        ].join(\",\");\n        createDebug.enable(\"\");\n        return namespaces;\n    }\n    function enabled(name) {\n        if (name[name.length - 1] === \"*\") {\n            return true;\n        }\n        let i;\n        let len;\n        for(i = 0, len = createDebug.skips.length; i < len; i++){\n            if (createDebug.skips[i].test(name)) {\n                return false;\n            }\n        }\n        for(i = 0, len = createDebug.names.length; i < len; i++){\n            if (createDebug.names[i].test(name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function toNamespace(regexp) {\n        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, \"*\");\n    }\n    function coerce(val) {\n        if (val instanceof Error) {\n            return val.stack || val.message;\n        }\n        return val;\n    }\n    function destroy2() {\n        console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");\n    }\n    createDebug.enable(createDebug.load());\n    return createDebug;\n}\nvar common = setup;\nvar browser$1 = createCommonjsModule(function(module, exports) {\n    exports.formatArgs = formatArgs2;\n    exports.save = save2;\n    exports.load = load2;\n    exports.useColors = useColors2;\n    exports.storage = localstorage();\n    exports.destroy = (()=>{\n        let warned = false;\n        return ()=>{\n            if (!warned) {\n                warned = true;\n                console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");\n            }\n        };\n    })();\n    exports.colors = [\n        \"#0000CC\",\n        \"#0000FF\",\n        \"#0033CC\",\n        \"#0033FF\",\n        \"#0066CC\",\n        \"#0066FF\",\n        \"#0099CC\",\n        \"#0099FF\",\n        \"#00CC00\",\n        \"#00CC33\",\n        \"#00CC66\",\n        \"#00CC99\",\n        \"#00CCCC\",\n        \"#00CCFF\",\n        \"#3300CC\",\n        \"#3300FF\",\n        \"#3333CC\",\n        \"#3333FF\",\n        \"#3366CC\",\n        \"#3366FF\",\n        \"#3399CC\",\n        \"#3399FF\",\n        \"#33CC00\",\n        \"#33CC33\",\n        \"#33CC66\",\n        \"#33CC99\",\n        \"#33CCCC\",\n        \"#33CCFF\",\n        \"#6600CC\",\n        \"#6600FF\",\n        \"#6633CC\",\n        \"#6633FF\",\n        \"#66CC00\",\n        \"#66CC33\",\n        \"#9900CC\",\n        \"#9900FF\",\n        \"#9933CC\",\n        \"#9933FF\",\n        \"#99CC00\",\n        \"#99CC33\",\n        \"#CC0000\",\n        \"#CC0033\",\n        \"#CC0066\",\n        \"#CC0099\",\n        \"#CC00CC\",\n        \"#CC00FF\",\n        \"#CC3300\",\n        \"#CC3333\",\n        \"#CC3366\",\n        \"#CC3399\",\n        \"#CC33CC\",\n        \"#CC33FF\",\n        \"#CC6600\",\n        \"#CC6633\",\n        \"#CC9900\",\n        \"#CC9933\",\n        \"#CCCC00\",\n        \"#CCCC33\",\n        \"#FF0000\",\n        \"#FF0033\",\n        \"#FF0066\",\n        \"#FF0099\",\n        \"#FF00CC\",\n        \"#FF00FF\",\n        \"#FF3300\",\n        \"#FF3333\",\n        \"#FF3366\",\n        \"#FF3399\",\n        \"#FF33CC\",\n        \"#FF33FF\",\n        \"#FF6600\",\n        \"#FF6633\",\n        \"#FF9900\",\n        \"#FF9933\",\n        \"#FFCC00\",\n        \"#FFCC33\"\n    ];\n    function useColors2() {\n        if (typeof window !== \"undefined\" && window.process && (window.process.type === \"renderer\" || window.process.__nwjs)) {\n            return true;\n        }\n        if (typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n            return false;\n        }\n        return typeof document !== \"undefined\" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== \"undefined\" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n    }\n    function formatArgs2(args) {\n        args[0] = (this.useColors ? \"%c\" : \"\") + this.namespace + (this.useColors ? \" %c\" : \" \") + args[0] + (this.useColors ? \"%c \" : \" \") + \"+\" + module.exports.humanize(this.diff);\n        if (!this.useColors) {\n            return;\n        }\n        const c = \"color: \" + this.color;\n        args.splice(1, 0, c, \"color: inherit\");\n        let index = 0;\n        let lastC = 0;\n        args[0].replace(/%[a-zA-Z%]/g, (match)=>{\n            if (match === \"%%\") {\n                return;\n            }\n            index++;\n            if (match === \"%c\") {\n                lastC = index;\n            }\n        });\n        args.splice(lastC, 0, c);\n    }\n    exports.log = console.debug || console.log || (()=>{});\n    function save2(namespaces) {\n        try {\n            if (namespaces) {\n                exports.storage.setItem(\"debug\", namespaces);\n            } else {\n                exports.storage.removeItem(\"debug\");\n            }\n        } catch (error) {}\n    }\n    function load2() {\n        let r;\n        try {\n            r = exports.storage.getItem(\"debug\");\n        } catch (error) {}\n        if (!r && typeof process !== \"undefined\" && \"env\" in process) {\n            r = process.env.DEBUG;\n        }\n        return r;\n    }\n    function localstorage() {\n        try {\n            return localStorage;\n        } catch (error) {}\n    }\n    module.exports = common(exports);\n    const { formatters } = module.exports;\n    formatters.j = function(v) {\n        try {\n            return JSON.stringify(v);\n        } catch (error) {\n            return \"[UnexpectedJSONParseError]: \" + error.message;\n        }\n    };\n});\nbrowser$1.colors;\nbrowser$1.destroy;\nbrowser$1.formatArgs;\nbrowser$1.load;\nbrowser$1.log;\nbrowser$1.save;\nbrowser$1.storage;\nbrowser$1.useColors;\nconst itrToStream = (itr)=>{\n    const it = itr[Symbol.asyncIterator]();\n    return new ReadableStream({\n        async pull (controller) {\n            const chunk = await it.next();\n            if (chunk.done) controller.close();\n            else controller.enqueue(chunk.value);\n        }\n    });\n};\nconst baseFetchConfig = (_apiRoot)=>({});\nconst defaultAdapter = \"cloudflare\";\nconst debug = browser$1(\"grammy:warn\");\nclass GrammyError extends Error {\n    method;\n    payload;\n    ok;\n    error_code;\n    description;\n    parameters;\n    constructor(message, err, method, payload){\n        super(`${message} (${err.error_code}: ${err.description})`);\n        this.method = method;\n        this.payload = payload;\n        this.ok = false;\n        this.name = \"GrammyError\";\n        this.error_code = err.error_code;\n        this.description = err.description;\n        this.parameters = err.parameters ?? {};\n    }\n}\nfunction toGrammyError(err, method, payload) {\n    switch(err.error_code){\n        case 401:\n            debug(\"Error 401 means that your bot token is wrong, talk to https://t.me/BotFather to check it.\");\n            break;\n        case 409:\n            debug(\"Error 409 means that you are running your bot several times on long polling. Consider revoking the bot token if you believe that no other instance is running.\");\n            break;\n    }\n    return new GrammyError(`Call to '${method}' failed!`, err, method, payload);\n}\nclass HttpError extends Error {\n    error;\n    constructor(message, error){\n        super(message);\n        this.error = error;\n        this.name = \"HttpError\";\n    }\n}\nfunction isTelegramError(err) {\n    return typeof err === \"object\" && err !== null && \"status\" in err && \"statusText\" in err;\n}\nfunction toHttpError(method, sensitiveLogs) {\n    return (err)=>{\n        let msg = `Network request for '${method}' failed!`;\n        if (isTelegramError(err)) msg += ` (${err.status}: ${err.statusText})`;\n        if (sensitiveLogs && err instanceof Error) msg += ` ${err.message}`;\n        throw new HttpError(msg, err);\n    };\n}\nconst osType = (()=>{\n    const { Deno } = globalThis;\n    if (typeof Deno?.build?.os === \"string\") {\n        return Deno.build.os;\n    }\n    const { navigator: navigator1 } = globalThis;\n    if (navigator1?.appVersion?.includes?.(\"Win\")) {\n        return \"windows\";\n    }\n    return \"linux\";\n})();\nconst isWindows = osType === \"windows\";\nfunction assertPath(path) {\n    if (typeof path !== \"string\") {\n        throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);\n    }\n}\nfunction stripSuffix(name, suffix) {\n    if (suffix.length >= name.length) {\n        return name;\n    }\n    const lenDiff = name.length - suffix.length;\n    for(let i = suffix.length - 1; i >= 0; --i){\n        if (name.charCodeAt(lenDiff + i) !== suffix.charCodeAt(i)) {\n            return name;\n        }\n    }\n    return name.slice(0, -suffix.length);\n}\nfunction lastPathSegment(path, isSep, start = 0) {\n    let matchedNonSeparator = false;\n    let end = path.length;\n    for(let i = path.length - 1; i >= start; --i){\n        if (isSep(path.charCodeAt(i))) {\n            if (matchedNonSeparator) {\n                start = i + 1;\n                break;\n            }\n        } else if (!matchedNonSeparator) {\n            matchedNonSeparator = true;\n            end = i + 1;\n        }\n    }\n    return path.slice(start, end);\n}\nfunction assertArgs(path, suffix) {\n    assertPath(path);\n    if (path.length === 0) return path;\n    if (typeof suffix !== \"string\") {\n        throw new TypeError(`Suffix must be a string. Received ${JSON.stringify(suffix)}`);\n    }\n}\nfunction stripTrailingSeparators(segment, isSep) {\n    if (segment.length <= 1) {\n        return segment;\n    }\n    let end = segment.length;\n    for(let i = segment.length - 1; i > 0; i--){\n        if (isSep(segment.charCodeAt(i))) {\n            end = i;\n        } else {\n            break;\n        }\n    }\n    return segment.slice(0, end);\n}\nfunction isPosixPathSeparator(code) {\n    return code === 47;\n}\nfunction basename(path, suffix = \"\") {\n    assertArgs(path, suffix);\n    const lastSegment = lastPathSegment(path, isPosixPathSeparator);\n    const strippedSegment = stripTrailingSeparators(lastSegment, isPosixPathSeparator);\n    return suffix ? stripSuffix(strippedSegment, suffix) : strippedSegment;\n}\nfunction isPathSeparator(code) {\n    return code === 47 || code === 92;\n}\nfunction isWindowsDeviceRoot(code) {\n    return code >= 97 && code <= 122 || code >= 65 && code <= 90;\n}\nfunction basename1(path, suffix = \"\") {\n    assertArgs(path, suffix);\n    let start = 0;\n    if (path.length >= 2) {\n        const drive = path.charCodeAt(0);\n        if (isWindowsDeviceRoot(drive)) {\n            if (path.charCodeAt(1) === 58) start = 2;\n        }\n    }\n    const lastSegment = lastPathSegment(path, isPathSeparator, start);\n    const strippedSegment = stripTrailingSeparators(lastSegment, isPathSeparator);\n    return suffix ? stripSuffix(strippedSegment, suffix) : strippedSegment;\n}\nfunction basename2(path, suffix = \"\") {\n    return isWindows ? basename1(path, suffix) : basename(path, suffix);\n}\nclass InputFile {\n    consumed = false;\n    fileData;\n    filename;\n    constructor(file, filename){\n        this.fileData = file;\n        filename ??= this.guessFilename(file);\n        this.filename = filename;\n    }\n    guessFilename(file) {\n        if (typeof file === \"string\") return basename2(file);\n        if (typeof file !== \"object\") return undefined;\n        if (\"url\" in file) return basename2(file.url);\n        if (!(file instanceof URL)) return undefined;\n        return basename2(file.pathname) || basename2(file.hostname);\n    }\n    toRaw() {\n        if (this.consumed) {\n            throw new Error(\"Cannot reuse InputFile data source!\");\n        }\n        const data = this.fileData;\n        if (data instanceof Blob) return data.stream();\n        if (data instanceof URL) return fetchFile(data);\n        if (\"url\" in data) return fetchFile(data.url);\n        if (!(data instanceof Uint8Array)) this.consumed = true;\n        return data;\n    }\n}\nasync function* fetchFile(url) {\n    const { body } = await fetch(url);\n    if (body === null) {\n        throw new Error(`Download failed, no response body from '${url}'`);\n    }\n    yield* body;\n}\nfunction requiresFormDataUpload(payload) {\n    return payload instanceof InputFile || typeof payload === \"object\" && payload !== null && Object.values(payload).some((v)=>Array.isArray(v) ? v.some(requiresFormDataUpload) : v instanceof InputFile || requiresFormDataUpload(v));\n}\nfunction str(value) {\n    return JSON.stringify(value, (_, v)=>v ?? undefined);\n}\nfunction createJsonPayload(payload) {\n    return {\n        method: \"POST\",\n        headers: {\n            \"content-type\": \"application/json\",\n            connection: \"keep-alive\"\n        },\n        body: str(payload)\n    };\n}\nasync function* protectItr(itr, onError) {\n    try {\n        yield* itr;\n    } catch (err) {\n        onError(err);\n    }\n}\nfunction createFormDataPayload(payload, onError) {\n    const boundary = createBoundary();\n    const itr = payloadToMultipartItr(payload, boundary);\n    const safeItr = protectItr(itr, onError);\n    const stream = itrToStream(safeItr);\n    return {\n        method: \"POST\",\n        headers: {\n            \"content-type\": `multipart/form-data; boundary=${boundary}`,\n            connection: \"keep-alive\"\n        },\n        body: stream\n    };\n}\nfunction createBoundary() {\n    return \"----------\" + randomId(32);\n}\nfunction randomId(length = 16) {\n    return Array.from(Array(length)).map(()=>Math.random().toString(36)[2] || 0).join(\"\");\n}\nconst enc = new TextEncoder();\nasync function* payloadToMultipartItr(payload, boundary) {\n    const files = extractFiles(payload);\n    yield enc.encode(`--${boundary}\\r\\n`);\n    const separator = enc.encode(`\\r\\n--${boundary}\\r\\n`);\n    let first = true;\n    for (const [key, value] of Object.entries(payload)){\n        if (value == null) continue;\n        if (!first) yield separator;\n        yield valuePart(key, typeof value === \"object\" ? str(value) : value);\n        first = false;\n    }\n    for (const { id, origin, file } of files){\n        if (!first) yield separator;\n        yield* filePart(id, origin, file);\n        first = false;\n    }\n    yield enc.encode(`\\r\\n--${boundary}--\\r\\n`);\n}\nfunction extractFiles(value) {\n    if (typeof value !== \"object\" || value === null) return [];\n    return Object.entries(value).flatMap(([k, v])=>{\n        if (Array.isArray(v)) return v.flatMap((p)=>extractFiles(p));\n        else if (v instanceof InputFile) {\n            const id = randomId();\n            Object.assign(value, {\n                [k]: `attach://${id}`\n            });\n            const origin = k === \"media\" && \"type\" in value && typeof value.type === \"string\" ? value.type : k;\n            return {\n                id,\n                origin,\n                file: v\n            };\n        } else return extractFiles(v);\n    });\n}\nfunction valuePart(key, value) {\n    return enc.encode(`content-disposition:form-data;name=\"${key}\"\\r\\n\\r\\n${value}`);\n}\nasync function* filePart(id, origin, input) {\n    const filename = input.filename || `${origin}.${getExt(origin)}`;\n    if (filename.includes(\"\\r\") || filename.includes(\"\\n\")) {\n        throw new Error(`File paths cannot contain carriage-return (\\\\r) \\\nor newline (\\\\n) characters! Filename for property '${origin}' was:\n\"\"\"\n${filename}\n\"\"\"`);\n    }\n    yield enc.encode(`content-disposition:form-data;name=\"${id}\";filename=${filename}\\r\\ncontent-type:application/octet-stream\\r\\n\\r\\n`);\n    const data = await input.toRaw();\n    if (data instanceof Uint8Array) yield data;\n    else yield* data;\n}\nfunction getExt(key) {\n    switch(key){\n        case \"certificate\":\n            return \"pem\";\n        case \"photo\":\n        case \"thumbnail\":\n            return \"jpg\";\n        case \"voice\":\n            return \"ogg\";\n        case \"audio\":\n            return \"mp3\";\n        case \"animation\":\n        case \"video\":\n        case \"video_note\":\n            return \"mp4\";\n        case \"sticker\":\n            return \"webp\";\n        default:\n            return \"dat\";\n    }\n}\nconst debug1 = browser$1(\"grammy:core\");\nfunction concatTransformer(prev, trans) {\n    return (method, payload, signal)=>trans(prev, method, payload, signal);\n}\nclass ApiClient {\n    token;\n    webhookReplyEnvelope;\n    options;\n    fetch;\n    hasUsedWebhookReply;\n    installedTransformers;\n    constructor(token, options = {}, webhookReplyEnvelope = {}){\n        this.token = token;\n        this.webhookReplyEnvelope = webhookReplyEnvelope;\n        this.hasUsedWebhookReply = false;\n        this.installedTransformers = [];\n        this.call = async (method, p, signal)=>{\n            const payload = p ?? {};\n            debug1(`Calling ${method}`);\n            if (signal !== undefined) validateSignal(method, payload, signal);\n            const opts = this.options;\n            const formDataRequired = requiresFormDataUpload(payload);\n            if (this.webhookReplyEnvelope.send !== undefined && !this.hasUsedWebhookReply && !formDataRequired && opts.canUseWebhookReply(method)) {\n                this.hasUsedWebhookReply = true;\n                const config = createJsonPayload({\n                    ...payload,\n                    method\n                });\n                await this.webhookReplyEnvelope.send(config.body);\n                return {\n                    ok: true,\n                    result: true\n                };\n            }\n            const controller = createAbortControllerFromSignal(signal);\n            const timeout = createTimeout(controller, opts.timeoutSeconds, method);\n            const streamErr = createStreamError(controller);\n            const url = opts.buildUrl(opts.apiRoot, this.token, method, opts.environment);\n            const config = formDataRequired ? createFormDataPayload(payload, (err)=>streamErr.catch(err)) : createJsonPayload(payload);\n            const sig = controller.signal;\n            const options = {\n                ...opts.baseFetchConfig,\n                signal: sig,\n                ...config\n            };\n            const successPromise = this.fetch(url instanceof URL ? url.href : url, options).catch(toHttpError(method, opts.sensitiveLogs));\n            const operations = [\n                successPromise,\n                streamErr.promise,\n                timeout.promise\n            ];\n            try {\n                const res = await Promise.race(operations);\n                return await res.json();\n            } finally{\n                if (timeout.handle !== undefined) clearTimeout(timeout.handle);\n            }\n        };\n        const apiRoot = options.apiRoot ?? \"https://api.telegram.org\";\n        const environment = options.environment ?? \"prod\";\n        const { fetch: customFetch } = options;\n        const fetchFn = customFetch ?? fetch;\n        this.options = {\n            apiRoot,\n            environment,\n            buildUrl: options.buildUrl ?? defaultBuildUrl,\n            timeoutSeconds: options.timeoutSeconds ?? 500,\n            baseFetchConfig: {\n                ...baseFetchConfig(apiRoot),\n                ...options.baseFetchConfig\n            },\n            canUseWebhookReply: options.canUseWebhookReply ?? (()=>false),\n            sensitiveLogs: options.sensitiveLogs ?? false,\n            fetch: (...args)=>fetchFn(...args)\n        };\n        this.fetch = this.options.fetch;\n        if (this.options.apiRoot.endsWith(\"/\")) {\n            throw new Error(`Remove the trailing '/' from the 'apiRoot' option (use '${this.options.apiRoot.substring(0, this.options.apiRoot.length - 1)}' instead of '${this.options.apiRoot}')`);\n        }\n    }\n    call;\n    use(...transformers) {\n        this.call = transformers.reduce(concatTransformer, this.call);\n        this.installedTransformers.push(...transformers);\n        return this;\n    }\n    async callApi(method, payload, signal) {\n        const data = await this.call(method, payload, signal);\n        if (data.ok) return data.result;\n        else throw toGrammyError(data, method, payload);\n    }\n}\nfunction createRawApi(token, options, webhookReplyEnvelope) {\n    const client = new ApiClient(token, options, webhookReplyEnvelope);\n    const proxyHandler = {\n        get (_, m) {\n            return m === \"toJSON\" ? \"__internal\" : m === \"getMe\" || m === \"getWebhookInfo\" || m === \"getForumTopicIconStickers\" || m === \"logOut\" || m === \"close\" ? client.callApi.bind(client, m, {}) : client.callApi.bind(client, m);\n        },\n        ...proxyMethods\n    };\n    const raw = new Proxy({}, proxyHandler);\n    const installedTransformers = client.installedTransformers;\n    const api = {\n        raw,\n        installedTransformers,\n        use: (...t)=>{\n            client.use(...t);\n            return api;\n        }\n    };\n    return api;\n}\nconst defaultBuildUrl = (root, token, method, env)=>{\n    const prefix = env === \"test\" ? \"test/\" : \"\";\n    return `${root}/bot${token}/${prefix}${method}`;\n};\nconst proxyMethods = {\n    set () {\n        return false;\n    },\n    defineProperty () {\n        return false;\n    },\n    deleteProperty () {\n        return false;\n    },\n    ownKeys () {\n        return [];\n    }\n};\nfunction createTimeout(controller, seconds, method) {\n    let handle = undefined;\n    const promise = new Promise((_, reject)=>{\n        handle = setTimeout(()=>{\n            const msg = `Request to '${method}' timed out after ${seconds} seconds`;\n            reject(new Error(msg));\n            controller.abort();\n        }, 1000 * seconds);\n    });\n    return {\n        promise,\n        handle\n    };\n}\nfunction createStreamError(abortController) {\n    let onError = (err)=>{\n        throw err;\n    };\n    const promise = new Promise((_, reject)=>{\n        onError = (err)=>{\n            reject(err);\n            abortController.abort();\n        };\n    });\n    return {\n        promise,\n        catch: onError\n    };\n}\nfunction createAbortControllerFromSignal(signal) {\n    const abortController = new AbortController();\n    if (signal === undefined) return abortController;\n    const sig = signal;\n    function abort() {\n        abortController.abort();\n        sig.removeEventListener(\"abort\", abort);\n    }\n    if (sig.aborted) abort();\n    else sig.addEventListener(\"abort\", abort);\n    return {\n        abort,\n        signal: abortController.signal\n    };\n}\nfunction validateSignal(method, payload, signal) {\n    if (typeof signal?.addEventListener === \"function\") {\n        return;\n    }\n    let payload0 = JSON.stringify(payload);\n    if (payload0.length > 20) {\n        payload0 = payload0.substring(0, 16) + \" ...\";\n    }\n    let payload1 = JSON.stringify(signal);\n    if (payload1.length > 20) {\n        payload1 = payload1.substring(0, 16) + \" ...\";\n    }\n    throw new Error(`Incorrect abort signal instance found! \\\nYou passed two payloads to '${method}' but you should merge \\\nthe second one containing '${payload1}' into the first one \\\ncontaining '${payload0}'! If you are using context shortcuts, \\\nyou may want to use a method on 'ctx.api' instead.\n\nIf you want to prevent such mistakes in the future, \\\nconsider using TypeScript. https://www.typescriptlang.org/`);\n}\nclass Api {\n    token;\n    options;\n    raw;\n    config;\n    constructor(token, options, webhookReplyEnvelope){\n        this.token = token;\n        this.options = options;\n        const { raw, use, installedTransformers } = createRawApi(token, options, webhookReplyEnvelope);\n        this.raw = raw;\n        this.config = {\n            use,\n            installedTransformers: ()=>installedTransformers.slice()\n        };\n    }\n    getUpdates(other, signal) {\n        return this.raw.getUpdates({\n            ...other\n        }, signal);\n    }\n    setWebhook(url, other, signal) {\n        return this.raw.setWebhook({\n            url,\n            ...other\n        }, signal);\n    }\n    deleteWebhook(other, signal) {\n        return this.raw.deleteWebhook({\n            ...other\n        }, signal);\n    }\n    getWebhookInfo(signal) {\n        return this.raw.getWebhookInfo(signal);\n    }\n    getMe(signal) {\n        return this.raw.getMe(signal);\n    }\n    logOut(signal) {\n        return this.raw.logOut(signal);\n    }\n    close(signal) {\n        return this.raw.close(signal);\n    }\n    sendMessage(chat_id, text, other, signal) {\n        return this.raw.sendMessage({\n            chat_id,\n            text,\n            ...other\n        }, signal);\n    }\n    forwardMessage(chat_id, from_chat_id, message_id, other, signal) {\n        return this.raw.forwardMessage({\n            chat_id,\n            from_chat_id,\n            message_id,\n            ...other\n        }, signal);\n    }\n    forwardMessages(chat_id, from_chat_id, message_ids, other, signal) {\n        return this.raw.forwardMessages({\n            chat_id,\n            from_chat_id,\n            message_ids,\n            ...other\n        }, signal);\n    }\n    copyMessage(chat_id, from_chat_id, message_id, other, signal) {\n        return this.raw.copyMessage({\n            chat_id,\n            from_chat_id,\n            message_id,\n            ...other\n        }, signal);\n    }\n    copyMessages(chat_id, from_chat_id, message_ids, other, signal) {\n        return this.raw.copyMessages({\n            chat_id,\n            from_chat_id,\n            message_ids,\n            ...other\n        }, signal);\n    }\n    sendPhoto(chat_id, photo, other, signal) {\n        return this.raw.sendPhoto({\n            chat_id,\n            photo,\n            ...other\n        }, signal);\n    }\n    sendAudio(chat_id, audio, other, signal) {\n        return this.raw.sendAudio({\n            chat_id,\n            audio,\n            ...other\n        }, signal);\n    }\n    sendDocument(chat_id, document1, other, signal) {\n        return this.raw.sendDocument({\n            chat_id,\n            document: document1,\n            ...other\n        }, signal);\n    }\n    sendVideo(chat_id, video, other, signal) {\n        return this.raw.sendVideo({\n            chat_id,\n            video,\n            ...other\n        }, signal);\n    }\n    sendAnimation(chat_id, animation, other, signal) {\n        return this.raw.sendAnimation({\n            chat_id,\n            animation,\n            ...other\n        }, signal);\n    }\n    sendVoice(chat_id, voice, other, signal) {\n        return this.raw.sendVoice({\n            chat_id,\n            voice,\n            ...other\n        }, signal);\n    }\n    sendVideoNote(chat_id, video_note, other, signal) {\n        return this.raw.sendVideoNote({\n            chat_id,\n            video_note,\n            ...other\n        }, signal);\n    }\n    sendMediaGroup(chat_id, media, other, signal) {\n        return this.raw.sendMediaGroup({\n            chat_id,\n            media,\n            ...other\n        }, signal);\n    }\n    sendLocation(chat_id, latitude, longitude, other, signal) {\n        return this.raw.sendLocation({\n            chat_id,\n            latitude,\n            longitude,\n            ...other\n        }, signal);\n    }\n    editMessageLiveLocation(chat_id, message_id, latitude, longitude, other, signal) {\n        return this.raw.editMessageLiveLocation({\n            chat_id,\n            message_id,\n            latitude,\n            longitude,\n            ...other\n        }, signal);\n    }\n    editMessageLiveLocationInline(inline_message_id, latitude, longitude, other, signal) {\n        return this.raw.editMessageLiveLocation({\n            inline_message_id,\n            latitude,\n            longitude,\n            ...other\n        }, signal);\n    }\n    stopMessageLiveLocation(chat_id, message_id, other, signal) {\n        return this.raw.stopMessageLiveLocation({\n            chat_id,\n            message_id,\n            ...other\n        }, signal);\n    }\n    stopMessageLiveLocationInline(inline_message_id, other, signal) {\n        return this.raw.stopMessageLiveLocation({\n            inline_message_id,\n            ...other\n        }, signal);\n    }\n    sendPaidMedia(chat_id, star_count, media, other, signal) {\n        return this.raw.sendPaidMedia({\n            chat_id,\n            star_count,\n            media,\n            ...other\n        }, signal);\n    }\n    sendVenue(chat_id, latitude, longitude, title, address, other, signal) {\n        return this.raw.sendVenue({\n            chat_id,\n            latitude,\n            longitude,\n            title,\n            address,\n            ...other\n        }, signal);\n    }\n    sendContact(chat_id, phone_number, first_name, other, signal) {\n        return this.raw.sendContact({\n            chat_id,\n            phone_number,\n            first_name,\n            ...other\n        }, signal);\n    }\n    sendPoll(chat_id, question, options, other, signal) {\n        return this.raw.sendPoll({\n            chat_id,\n            question,\n            options,\n            ...other\n        }, signal);\n    }\n    sendDice(chat_id, emoji, other, signal) {\n        return this.raw.sendDice({\n            chat_id,\n            emoji,\n            ...other\n        }, signal);\n    }\n    setMessageReaction(chat_id, message_id, reaction, other, signal) {\n        return this.raw.setMessageReaction({\n            chat_id,\n            message_id,\n            reaction,\n            ...other\n        }, signal);\n    }\n    sendChatAction(chat_id, action, other, signal) {\n        return this.raw.sendChatAction({\n            chat_id,\n            action,\n            ...other\n        }, signal);\n    }\n    getUserProfilePhotos(user_id, other, signal) {\n        return this.raw.getUserProfilePhotos({\n            user_id,\n            ...other\n        }, signal);\n    }\n    setUserEmojiStatus(user_id, other, signal) {\n        return this.raw.setUserEmojiStatus({\n            user_id,\n            ...other\n        }, signal);\n    }\n    getUserChatBoosts(chat_id, user_id, signal) {\n        return this.raw.getUserChatBoosts({\n            chat_id,\n            user_id\n        }, signal);\n    }\n    getBusinessConnection(business_connection_id, signal) {\n        return this.raw.getBusinessConnection({\n            business_connection_id\n        }, signal);\n    }\n    getFile(file_id, signal) {\n        return this.raw.getFile({\n            file_id\n        }, signal);\n    }\n    kickChatMember(...args) {\n        return this.banChatMember(...args);\n    }\n    banChatMember(chat_id, user_id, other, signal) {\n        return this.raw.banChatMember({\n            chat_id,\n            user_id,\n            ...other\n        }, signal);\n    }\n    unbanChatMember(chat_id, user_id, other, signal) {\n        return this.raw.unbanChatMember({\n            chat_id,\n            user_id,\n            ...other\n        }, signal);\n    }\n    restrictChatMember(chat_id, user_id, permissions, other, signal) {\n        return this.raw.restrictChatMember({\n            chat_id,\n            user_id,\n            permissions,\n            ...other\n        }, signal);\n    }\n    promoteChatMember(chat_id, user_id, other, signal) {\n        return this.raw.promoteChatMember({\n            chat_id,\n            user_id,\n            ...other\n        }, signal);\n    }\n    setChatAdministratorCustomTitle(chat_id, user_id, custom_title, signal) {\n        return this.raw.setChatAdministratorCustomTitle({\n            chat_id,\n            user_id,\n            custom_title\n        }, signal);\n    }\n    banChatSenderChat(chat_id, sender_chat_id, signal) {\n        return this.raw.banChatSenderChat({\n            chat_id,\n            sender_chat_id\n        }, signal);\n    }\n    unbanChatSenderChat(chat_id, sender_chat_id, signal) {\n        return this.raw.unbanChatSenderChat({\n            chat_id,\n            sender_chat_id\n        }, signal);\n    }\n    setChatPermissions(chat_id, permissions, other, signal) {\n        return this.raw.setChatPermissions({\n            chat_id,\n            permissions,\n            ...other\n        }, signal);\n    }\n    exportChatInviteLink(chat_id, signal) {\n        return this.raw.exportChatInviteLink({\n            chat_id\n        }, signal);\n    }\n    createChatInviteLink(chat_id, other, signal) {\n        return this.raw.createChatInviteLink({\n            chat_id,\n            ...other\n        }, signal);\n    }\n    editChatInviteLink(chat_id, invite_link, other, signal) {\n        return this.raw.editChatInviteLink({\n            chat_id,\n            invite_link,\n            ...other\n        }, signal);\n    }\n    createChatSubscriptionInviteLink(chat_id, subscription_period, subscription_price, other, signal) {\n        return this.raw.createChatSubscriptionInviteLink({\n            chat_id,\n            subscription_period,\n            subscription_price,\n            ...other\n        }, signal);\n    }\n    editChatSubscriptionInviteLink(chat_id, invite_link, other, signal) {\n        return this.raw.editChatSubscriptionInviteLink({\n            chat_id,\n            invite_link,\n            ...other\n        }, signal);\n    }\n    revokeChatInviteLink(chat_id, invite_link, signal) {\n        return this.raw.revokeChatInviteLink({\n            chat_id,\n            invite_link\n        }, signal);\n    }\n    approveChatJoinRequest(chat_id, user_id, signal) {\n        return this.raw.approveChatJoinRequest({\n            chat_id,\n            user_id\n        }, signal);\n    }\n    declineChatJoinRequest(chat_id, user_id, signal) {\n        return this.raw.declineChatJoinRequest({\n            chat_id,\n            user_id\n        }, signal);\n    }\n    setChatPhoto(chat_id, photo, signal) {\n        return this.raw.setChatPhoto({\n            chat_id,\n            photo\n        }, signal);\n    }\n    deleteChatPhoto(chat_id, signal) {\n        return this.raw.deleteChatPhoto({\n            chat_id\n        }, signal);\n    }\n    setChatTitle(chat_id, title, signal) {\n        return this.raw.setChatTitle({\n            chat_id,\n            title\n        }, signal);\n    }\n    setChatDescription(chat_id, description, signal) {\n        return this.raw.setChatDescription({\n            chat_id,\n            description\n        }, signal);\n    }\n    pinChatMessage(chat_id, message_id, other, signal) {\n        return this.raw.pinChatMessage({\n            chat_id,\n            message_id,\n            ...other\n        }, signal);\n    }\n    unpinChatMessage(chat_id, message_id, signal) {\n        return this.raw.unpinChatMessage({\n            chat_id,\n            message_id\n        }, signal);\n    }\n    unpinAllChatMessages(chat_id, signal) {\n        return this.raw.unpinAllChatMessages({\n            chat_id\n        }, signal);\n    }\n    leaveChat(chat_id, signal) {\n        return this.raw.leaveChat({\n            chat_id\n        }, signal);\n    }\n    getChat(chat_id, signal) {\n        return this.raw.getChat({\n            chat_id\n        }, signal);\n    }\n    getChatAdministrators(chat_id, signal) {\n        return this.raw.getChatAdministrators({\n            chat_id\n        }, signal);\n    }\n    getChatMembersCount(...args) {\n        return this.getChatMemberCount(...args);\n    }\n    getChatMemberCount(chat_id, signal) {\n        return this.raw.getChatMemberCount({\n            chat_id\n        }, signal);\n    }\n    getChatMember(chat_id, user_id, signal) {\n        return this.raw.getChatMember({\n            chat_id,\n            user_id\n        }, signal);\n    }\n    setChatStickerSet(chat_id, sticker_set_name, signal) {\n        return this.raw.setChatStickerSet({\n            chat_id,\n            sticker_set_name\n        }, signal);\n    }\n    deleteChatStickerSet(chat_id, signal) {\n        return this.raw.deleteChatStickerSet({\n            chat_id\n        }, signal);\n    }\n    getForumTopicIconStickers(signal) {\n        return this.raw.getForumTopicIconStickers(signal);\n    }\n    createForumTopic(chat_id, name, other, signal) {\n        return this.raw.createForumTopic({\n            chat_id,\n            name,\n            ...other\n        }, signal);\n    }\n    editForumTopic(chat_id, message_thread_id, other, signal) {\n        return this.raw.editForumTopic({\n            chat_id,\n            message_thread_id,\n            ...other\n        }, signal);\n    }\n    closeForumTopic(chat_id, message_thread_id, signal) {\n        return this.raw.closeForumTopic({\n            chat_id,\n            message_thread_id\n        }, signal);\n    }\n    reopenForumTopic(chat_id, message_thread_id, signal) {\n        return this.raw.reopenForumTopic({\n            chat_id,\n            message_thread_id\n        }, signal);\n    }\n    deleteForumTopic(chat_id, message_thread_id, signal) {\n        return this.raw.deleteForumTopic({\n            chat_id,\n            message_thread_id\n        }, signal);\n    }\n    unpinAllForumTopicMessages(chat_id, message_thread_id, signal) {\n        return this.raw.unpinAllForumTopicMessages({\n            chat_id,\n            message_thread_id\n        }, signal);\n    }\n    editGeneralForumTopic(chat_id, name, signal) {\n        return this.raw.editGeneralForumTopic({\n            chat_id,\n            name\n        }, signal);\n    }\n    closeGeneralForumTopic(chat_id, signal) {\n        return this.raw.closeGeneralForumTopic({\n            chat_id\n        }, signal);\n    }\n    reopenGeneralForumTopic(chat_id, signal) {\n        return this.raw.reopenGeneralForumTopic({\n            chat_id\n        }, signal);\n    }\n    hideGeneralForumTopic(chat_id, signal) {\n        return this.raw.hideGeneralForumTopic({\n            chat_id\n        }, signal);\n    }\n    unhideGeneralForumTopic(chat_id, signal) {\n        return this.raw.unhideGeneralForumTopic({\n            chat_id\n        }, signal);\n    }\n    unpinAllGeneralForumTopicMessages(chat_id, signal) {\n        return this.raw.unpinAllGeneralForumTopicMessages({\n            chat_id\n        }, signal);\n    }\n    answerCallbackQuery(callback_query_id, other, signal) {\n        return this.raw.answerCallbackQuery({\n            callback_query_id,\n            ...other\n        }, signal);\n    }\n    setMyName(name, other, signal) {\n        return this.raw.setMyName({\n            name,\n            ...other\n        }, signal);\n    }\n    getMyName(other, signal) {\n        return this.raw.getMyName(other ?? {}, signal);\n    }\n    setMyCommands(commands, other, signal) {\n        return this.raw.setMyCommands({\n            commands,\n            ...other\n        }, signal);\n    }\n    deleteMyCommands(other, signal) {\n        return this.raw.deleteMyCommands({\n            ...other\n        }, signal);\n    }\n    getMyCommands(other, signal) {\n        return this.raw.getMyCommands({\n            ...other\n        }, signal);\n    }\n    setMyDescription(description, other, signal) {\n        return this.raw.setMyDescription({\n            description,\n            ...other\n        }, signal);\n    }\n    getMyDescription(other, signal) {\n        return this.raw.getMyDescription({\n            ...other\n        }, signal);\n    }\n    setMyShortDescription(short_description, other, signal) {\n        return this.raw.setMyShortDescription({\n            short_description,\n            ...other\n        }, signal);\n    }\n    getMyShortDescription(other, signal) {\n        return this.raw.getMyShortDescription({\n            ...other\n        }, signal);\n    }\n    setChatMenuButton(other, signal) {\n        return this.raw.setChatMenuButton({\n            ...other\n        }, signal);\n    }\n    getChatMenuButton(other, signal) {\n        return this.raw.getChatMenuButton({\n            ...other\n        }, signal);\n    }\n    setMyDefaultAdministratorRights(other, signal) {\n        return this.raw.setMyDefaultAdministratorRights({\n            ...other\n        }, signal);\n    }\n    getMyDefaultAdministratorRights(other, signal) {\n        return this.raw.getMyDefaultAdministratorRights({\n            ...other\n        }, signal);\n    }\n    editMessageText(chat_id, message_id, text, other, signal) {\n        return this.raw.editMessageText({\n            chat_id,\n            message_id,\n            text,\n            ...other\n        }, signal);\n    }\n    editMessageTextInline(inline_message_id, text, other, signal) {\n        return this.raw.editMessageText({\n            inline_message_id,\n            text,\n            ...other\n        }, signal);\n    }\n    editMessageCaption(chat_id, message_id, other, signal) {\n        return this.raw.editMessageCaption({\n            chat_id,\n            message_id,\n            ...other\n        }, signal);\n    }\n    editMessageCaptionInline(inline_message_id, other, signal) {\n        return this.raw.editMessageCaption({\n            inline_message_id,\n            ...other\n        }, signal);\n    }\n    editMessageMedia(chat_id, message_id, media, other, signal) {\n        return this.raw.editMessageMedia({\n            chat_id,\n            message_id,\n            media,\n            ...other\n        }, signal);\n    }\n    editMessageMediaInline(inline_message_id, media, other, signal) {\n        return this.raw.editMessageMedia({\n            inline_message_id,\n            media,\n            ...other\n        }, signal);\n    }\n    editMessageReplyMarkup(chat_id, message_id, other, signal) {\n        return this.raw.editMessageReplyMarkup({\n            chat_id,\n            message_id,\n            ...other\n        }, signal);\n    }\n    editMessageReplyMarkupInline(inline_message_id, other, signal) {\n        return this.raw.editMessageReplyMarkup({\n            inline_message_id,\n            ...other\n        }, signal);\n    }\n    stopPoll(chat_id, message_id, other, signal) {\n        return this.raw.stopPoll({\n            chat_id,\n            message_id,\n            ...other\n        }, signal);\n    }\n    deleteMessage(chat_id, message_id, signal) {\n        return this.raw.deleteMessage({\n            chat_id,\n            message_id\n        }, signal);\n    }\n    deleteMessages(chat_id, message_ids, signal) {\n        return this.raw.deleteMessages({\n            chat_id,\n            message_ids\n        }, signal);\n    }\n    sendSticker(chat_id, sticker, other, signal) {\n        return this.raw.sendSticker({\n            chat_id,\n            sticker,\n            ...other\n        }, signal);\n    }\n    getStickerSet(name, signal) {\n        return this.raw.getStickerSet({\n            name\n        }, signal);\n    }\n    getCustomEmojiStickers(custom_emoji_ids, signal) {\n        return this.raw.getCustomEmojiStickers({\n            custom_emoji_ids\n        }, signal);\n    }\n    uploadStickerFile(user_id, sticker_format, sticker, signal) {\n        return this.raw.uploadStickerFile({\n            user_id,\n            sticker_format,\n            sticker\n        }, signal);\n    }\n    createNewStickerSet(user_id, name, title, stickers, other, signal) {\n        return this.raw.createNewStickerSet({\n            user_id,\n            name,\n            title,\n            stickers,\n            ...other\n        }, signal);\n    }\n    addStickerToSet(user_id, name, sticker, signal) {\n        return this.raw.addStickerToSet({\n            user_id,\n            name,\n            sticker\n        }, signal);\n    }\n    setStickerPositionInSet(sticker, position, signal) {\n        return this.raw.setStickerPositionInSet({\n            sticker,\n            position\n        }, signal);\n    }\n    deleteStickerFromSet(sticker, signal) {\n        return this.raw.deleteStickerFromSet({\n            sticker\n        }, signal);\n    }\n    replaceStickerInSet(user_id, name, old_sticker, sticker, signal) {\n        return this.raw.replaceStickerInSet({\n            user_id,\n            name,\n            old_sticker,\n            sticker\n        }, signal);\n    }\n    setStickerEmojiList(sticker, emoji_list, signal) {\n        return this.raw.setStickerEmojiList({\n            sticker,\n            emoji_list\n        }, signal);\n    }\n    setStickerKeywords(sticker, keywords, signal) {\n        return this.raw.setStickerKeywords({\n            sticker,\n            keywords\n        }, signal);\n    }\n    setStickerMaskPosition(sticker, mask_position, signal) {\n        return this.raw.setStickerMaskPosition({\n            sticker,\n            mask_position\n        }, signal);\n    }\n    setStickerSetTitle(name, title, signal) {\n        return this.raw.setStickerSetTitle({\n            name,\n            title\n        }, signal);\n    }\n    deleteStickerSet(name, signal) {\n        return this.raw.deleteStickerSet({\n            name\n        }, signal);\n    }\n    setStickerSetThumbnail(name, user_id, thumbnail, format, signal) {\n        return this.raw.setStickerSetThumbnail({\n            name,\n            user_id,\n            thumbnail,\n            format\n        }, signal);\n    }\n    setCustomEmojiStickerSetThumbnail(name, custom_emoji_id, signal) {\n        return this.raw.setCustomEmojiStickerSetThumbnail({\n            name,\n            custom_emoji_id\n        }, signal);\n    }\n    getAvailableGifts(signal) {\n        return this.raw.getAvailableGifts(signal);\n    }\n    sendGift(user_id, gift_id, other, signal) {\n        return this.raw.sendGift({\n            user_id,\n            gift_id,\n            ...other\n        }, signal);\n    }\n    answerInlineQuery(inline_query_id, results, other, signal) {\n        return this.raw.answerInlineQuery({\n            inline_query_id,\n            results,\n            ...other\n        }, signal);\n    }\n    answerWebAppQuery(web_app_query_id, result, signal) {\n        return this.raw.answerWebAppQuery({\n            web_app_query_id,\n            result\n        }, signal);\n    }\n    savePreparedInlineMessage(user_id, result, other, signal) {\n        return this.raw.savePreparedInlineMessage({\n            user_id,\n            result,\n            ...other\n        }, signal);\n    }\n    sendInvoice(chat_id, title, description, payload, currency, prices, other, signal) {\n        return this.raw.sendInvoice({\n            chat_id,\n            title,\n            description,\n            payload,\n            currency,\n            prices,\n            ...other\n        }, signal);\n    }\n    createInvoiceLink(title, description, payload, provider_token, currency, prices, other, signal) {\n        return this.raw.createInvoiceLink({\n            title,\n            description,\n            payload,\n            provider_token,\n            currency,\n            prices,\n            ...other\n        }, signal);\n    }\n    answerShippingQuery(shipping_query_id, ok, other, signal) {\n        return this.raw.answerShippingQuery({\n            shipping_query_id,\n            ok,\n            ...other\n        }, signal);\n    }\n    answerPreCheckoutQuery(pre_checkout_query_id, ok, other, signal) {\n        return this.raw.answerPreCheckoutQuery({\n            pre_checkout_query_id,\n            ok,\n            ...other\n        }, signal);\n    }\n    getStarTransactions(other, signal) {\n        return this.raw.getStarTransactions({\n            ...other\n        }, signal);\n    }\n    refundStarPayment(user_id, telegram_payment_charge_id, signal) {\n        return this.raw.refundStarPayment({\n            user_id,\n            telegram_payment_charge_id\n        }, signal);\n    }\n    editUserStarSubscription(user_id, telegram_payment_charge_id, is_canceled, signal) {\n        return this.raw.editUserStarSubscription({\n            user_id,\n            telegram_payment_charge_id,\n            is_canceled\n        }, signal);\n    }\n    verifyUser(user_id, other, signal) {\n        return this.raw.verifyUser({\n            user_id,\n            ...other\n        }, signal);\n    }\n    verifyChat(chat_id, other, signal) {\n        return this.raw.verifyChat({\n            chat_id,\n            ...other\n        }, signal);\n    }\n    removeUserVerification(user_id, signal) {\n        return this.raw.removeUserVerification({\n            user_id\n        }, signal);\n    }\n    removeChatVerification(chat_id, signal) {\n        return this.raw.removeChatVerification({\n            chat_id\n        }, signal);\n    }\n    setPassportDataErrors(user_id, errors, signal) {\n        return this.raw.setPassportDataErrors({\n            user_id,\n            errors\n        }, signal);\n    }\n    sendGame(chat_id, game_short_name, other, signal) {\n        return this.raw.sendGame({\n            chat_id,\n            game_short_name,\n            ...other\n        }, signal);\n    }\n    setGameScore(chat_id, message_id, user_id, score, other, signal) {\n        return this.raw.setGameScore({\n            chat_id,\n            message_id,\n            user_id,\n            score,\n            ...other\n        }, signal);\n    }\n    setGameScoreInline(inline_message_id, user_id, score, other, signal) {\n        return this.raw.setGameScore({\n            inline_message_id,\n            user_id,\n            score,\n            ...other\n        }, signal);\n    }\n    getGameHighScores(chat_id, message_id, user_id, signal) {\n        return this.raw.getGameHighScores({\n            chat_id,\n            message_id,\n            user_id\n        }, signal);\n    }\n    getGameHighScoresInline(inline_message_id, user_id, signal) {\n        return this.raw.getGameHighScores({\n            inline_message_id,\n            user_id\n        }, signal);\n    }\n}\nconst debug2 = browser$1(\"grammy:bot\");\nconst debugWarn = browser$1(\"grammy:warn\");\nconst debugErr = browser$1(\"grammy:error\");\nconst DEFAULT_UPDATE_TYPES = [\n    \"message\",\n    \"edited_message\",\n    \"channel_post\",\n    \"edited_channel_post\",\n    \"business_connection\",\n    \"business_message\",\n    \"edited_business_message\",\n    \"deleted_business_messages\",\n    \"inline_query\",\n    \"chosen_inline_result\",\n    \"callback_query\",\n    \"shipping_query\",\n    \"pre_checkout_query\",\n    \"poll\",\n    \"poll_answer\",\n    \"my_chat_member\",\n    \"chat_join_request\",\n    \"chat_boost\",\n    \"removed_chat_boost\"\n];\nclass Bot extends Composer {\n    token;\n    pollingRunning;\n    pollingAbortController;\n    lastTriedUpdateId;\n    api;\n    me;\n    mePromise;\n    clientConfig;\n    ContextConstructor;\n    observedUpdateTypes;\n    errorHandler;\n    constructor(token, config){\n        super();\n        this.token = token;\n        this.pollingRunning = false;\n        this.lastTriedUpdateId = 0;\n        this.observedUpdateTypes = new Set();\n        this.errorHandler = async (err)=>{\n            console.error(\"Error in middleware while handling update\", err.ctx?.update?.update_id, err.error);\n            console.error(\"No error handler was set!\");\n            console.error(\"Set your own error handler with `bot.catch = ...`\");\n            if (this.pollingRunning) {\n                console.error(\"Stopping bot\");\n                await this.stop();\n            }\n            throw err;\n        };\n        if (!token) throw new Error(\"Empty token!\");\n        this.me = config?.botInfo;\n        this.clientConfig = config?.client;\n        this.ContextConstructor = config?.ContextConstructor ?? Context;\n        this.api = new Api(token, this.clientConfig);\n    }\n    set botInfo(botInfo) {\n        this.me = botInfo;\n    }\n    get botInfo() {\n        if (this.me === undefined) {\n            throw new Error(\"Bot information unavailable! Make sure to call `await bot.init()` before accessing `bot.botInfo`!\");\n        }\n        return this.me;\n    }\n    on(filter, ...middleware) {\n        for (const [u] of parse(filter).flatMap(preprocess)){\n            this.observedUpdateTypes.add(u);\n        }\n        return super.on(filter, ...middleware);\n    }\n    reaction(reaction, ...middleware) {\n        this.observedUpdateTypes.add(\"message_reaction\");\n        return super.reaction(reaction, ...middleware);\n    }\n    isInited() {\n        return this.me !== undefined;\n    }\n    async init(signal) {\n        if (!this.isInited()) {\n            debug2(\"Initializing bot\");\n            this.mePromise ??= withRetries(()=>this.api.getMe(signal), signal);\n            let me;\n            try {\n                me = await this.mePromise;\n            } finally{\n                this.mePromise = undefined;\n            }\n            if (this.me === undefined) this.me = me;\n            else debug2(\"Bot info was set by now, will not overwrite\");\n        }\n        debug2(`I am ${this.me.username}!`);\n    }\n    async handleUpdates(updates) {\n        for (const update of updates){\n            this.lastTriedUpdateId = update.update_id;\n            try {\n                await this.handleUpdate(update);\n            } catch (err) {\n                if (err instanceof BotError) {\n                    await this.errorHandler(err);\n                } else {\n                    console.error(\"FATAL: grammY unable to handle:\", err);\n                    throw err;\n                }\n            }\n        }\n    }\n    async handleUpdate(update, webhookReplyEnvelope) {\n        if (this.me === undefined) {\n            throw new Error(\"Bot not initialized! Either call `await bot.init()`, \\\nor directly set the `botInfo` option in the `Bot` constructor to specify \\\na known bot info object.\");\n        }\n        debug2(`Processing update ${update.update_id}`);\n        const api = new Api(this.token, this.clientConfig, webhookReplyEnvelope);\n        const t = this.api.config.installedTransformers();\n        if (t.length > 0) api.config.use(...t);\n        const ctx = new this.ContextConstructor(update, api, this.me);\n        try {\n            await run(this.middleware(), ctx);\n        } catch (err) {\n            debugErr(`Error in middleware for update ${update.update_id}`);\n            throw new BotError(err, ctx);\n        }\n    }\n    async start(options) {\n        const setup = [];\n        if (!this.isInited()) {\n            setup.push(this.init(this.pollingAbortController?.signal));\n        }\n        if (this.pollingRunning) {\n            await Promise.all(setup);\n            debug2(\"Simple long polling already running!\");\n            return;\n        }\n        this.pollingRunning = true;\n        this.pollingAbortController = new AbortController();\n        try {\n            setup.push(withRetries(async ()=>{\n                await this.api.deleteWebhook({\n                    drop_pending_updates: options?.drop_pending_updates\n                }, this.pollingAbortController?.signal);\n            }, this.pollingAbortController?.signal));\n            await Promise.all(setup);\n            await options?.onStart?.(this.botInfo);\n        } catch (err) {\n            this.pollingRunning = false;\n            this.pollingAbortController = undefined;\n            throw err;\n        }\n        if (!this.pollingRunning) return;\n        validateAllowedUpdates(this.observedUpdateTypes, options?.allowed_updates);\n        this.use = noUseFunction;\n        debug2(\"Starting simple long polling\");\n        await this.loop(options);\n        debug2(\"Middleware is done running\");\n    }\n    async stop() {\n        if (this.pollingRunning) {\n            debug2(\"Stopping bot, saving update offset\");\n            this.pollingRunning = false;\n            this.pollingAbortController?.abort();\n            const offset = this.lastTriedUpdateId + 1;\n            await this.api.getUpdates({\n                offset,\n                limit: 1\n            }).finally(()=>this.pollingAbortController = undefined);\n        } else {\n            debug2(\"Bot is not running!\");\n        }\n    }\n    isRunning() {\n        return this.pollingRunning;\n    }\n    catch(errorHandler) {\n        this.errorHandler = errorHandler;\n    }\n    async loop(options) {\n        const limit = options?.limit;\n        const timeout = options?.timeout ?? 30;\n        let allowed_updates = options?.allowed_updates ?? [];\n        try {\n            while(this.pollingRunning){\n                const updates = await this.fetchUpdates({\n                    limit,\n                    timeout,\n                    allowed_updates\n                });\n                if (updates === undefined) break;\n                await this.handleUpdates(updates);\n                allowed_updates = undefined;\n            }\n        } finally{\n            this.pollingRunning = false;\n        }\n    }\n    async fetchUpdates({ limit, timeout, allowed_updates }) {\n        const offset = this.lastTriedUpdateId + 1;\n        let updates = undefined;\n        do {\n            try {\n                updates = await this.api.getUpdates({\n                    offset,\n                    limit,\n                    timeout,\n                    allowed_updates\n                }, this.pollingAbortController?.signal);\n            } catch (error) {\n                await this.handlePollingError(error);\n            }\n        }while (updates === undefined && this.pollingRunning)\n        return updates;\n    }\n    async handlePollingError(error) {\n        if (!this.pollingRunning) {\n            debug2(\"Pending getUpdates request cancelled\");\n            return;\n        }\n        let sleepSeconds = 3;\n        if (error instanceof GrammyError) {\n            debugErr(error.message);\n            if (error.error_code === 401 || error.error_code === 409) {\n                throw error;\n            } else if (error.error_code === 429) {\n                debugErr(\"Bot API server is closing.\");\n                sleepSeconds = error.parameters.retry_after ?? sleepSeconds;\n            }\n        } else debugErr(error);\n        debugErr(`Call to getUpdates failed, retrying in ${sleepSeconds} seconds ...`);\n        await sleep(sleepSeconds);\n    }\n}\nasync function withRetries(task, signal) {\n    const INITIAL_DELAY = 50;\n    let lastDelay = 50;\n    async function handleError(error) {\n        let delay = false;\n        let strategy = \"rethrow\";\n        if (error instanceof HttpError) {\n            delay = true;\n            strategy = \"retry\";\n        } else if (error instanceof GrammyError) {\n            if (error.error_code >= 500) {\n                delay = true;\n                strategy = \"retry\";\n            } else if (error.error_code === 429) {\n                const retryAfter = error.parameters.retry_after;\n                if (typeof retryAfter === \"number\") {\n                    await sleep(retryAfter, signal);\n                    lastDelay = INITIAL_DELAY;\n                } else {\n                    delay = true;\n                }\n                strategy = \"retry\";\n            }\n        }\n        if (delay) {\n            if (lastDelay !== 50) {\n                await sleep(lastDelay, signal);\n            }\n            const TWENTY_MINUTES = 20 * 60 * 1000;\n            lastDelay = Math.min(TWENTY_MINUTES, 2 * lastDelay);\n        }\n        return strategy;\n    }\n    let result = {\n        ok: false\n    };\n    while(!result.ok){\n        try {\n            result = {\n                ok: true,\n                value: await task()\n            };\n        } catch (error) {\n            debugErr(error);\n            const strategy = await handleError(error);\n            switch(strategy){\n                case \"retry\":\n                    continue;\n                case \"rethrow\":\n                    throw error;\n            }\n        }\n    }\n    return result.value;\n}\nasync function sleep(seconds, signal) {\n    let handle;\n    let reject;\n    function abort() {\n        reject?.(new Error(\"Aborted delay\"));\n        if (handle !== undefined) clearTimeout(handle);\n    }\n    try {\n        await new Promise((res, rej)=>{\n            reject = rej;\n            if (signal?.aborted) {\n                abort();\n                return;\n            }\n            signal?.addEventListener(\"abort\", abort);\n            handle = setTimeout(res, 1000 * seconds);\n        });\n    } finally{\n        signal?.removeEventListener(\"abort\", abort);\n    }\n}\nfunction validateAllowedUpdates(updates, allowed = DEFAULT_UPDATE_TYPES) {\n    const impossible = Array.from(updates).filter((u)=>!allowed.includes(u));\n    if (impossible.length > 0) {\n        debugWarn(`You registered listeners for the following update types, \\\nbut you did not specify them in \\`allowed_updates\\` \\\nso they may not be received: ${impossible.map((u)=>`'${u}'`).join(\", \")}`);\n    }\n}\nfunction noUseFunction() {\n    throw new Error(`It looks like you are registering more listeners \\\non your bot from within other listeners! This means that every time your bot \\\nhandles a message like this one, new listeners will be added. This list grows until \\\nyour machine crashes, so grammY throws this error to tell you that you should \\\nprobably do things a bit differently. If you're unsure how to resolve this problem, \\\nyou can ask in the group chat: https://telegram.me/grammyjs\n\nOn the other hand, if you actually know what you're doing and you do need to install \\\nfurther middleware while your bot is running, consider installing a composer \\\ninstance on your bot, and in turn augment the composer after the fact. This way, \\\nyou can circumvent this protection against memory leaks.`);\n}\nconst ALL_UPDATE_TYPES = [\n    ...DEFAULT_UPDATE_TYPES,\n    \"chat_member\",\n    \"message_reaction\",\n    \"message_reaction_count\"\n];\nconst ALL_CHAT_PERMISSIONS = {\n    is_anonymous: true,\n    can_manage_chat: true,\n    can_delete_messages: true,\n    can_manage_video_chats: true,\n    can_restrict_members: true,\n    can_promote_members: true,\n    can_change_info: true,\n    can_invite_users: true,\n    can_post_stories: true,\n    can_edit_stories: true,\n    can_delete_stories: true,\n    can_post_messages: true,\n    can_edit_messages: true,\n    can_pin_messages: true,\n    can_manage_topics: true\n};\nconst API_CONSTANTS = {\n    DEFAULT_UPDATE_TYPES,\n    ALL_UPDATE_TYPES,\n    ALL_CHAT_PERMISSIONS\n};\nObject.freeze(API_CONSTANTS);\nexport { API_CONSTANTS as API_CONSTANTS };\nfunction inputMessage(queryTemplate) {\n    return {\n        ...queryTemplate,\n        ...inputMessageMethods(queryTemplate)\n    };\n}\nfunction inputMessageMethods(queryTemplate) {\n    return {\n        text (message_text, options = {}) {\n            const content = {\n                message_text,\n                ...options\n            };\n            return {\n                ...queryTemplate,\n                input_message_content: content\n            };\n        },\n        location (latitude, longitude, options = {}) {\n            const content = {\n                latitude,\n                longitude,\n                ...options\n            };\n            return {\n                ...queryTemplate,\n                input_message_content: content\n            };\n        },\n        venue (title, latitude, longitude, address, options) {\n            const content = {\n                title,\n                latitude,\n                longitude,\n                address,\n                ...options\n            };\n            return {\n                ...queryTemplate,\n                input_message_content: content\n            };\n        },\n        contact (first_name, phone_number, options = {}) {\n            const content = {\n                first_name,\n                phone_number,\n                ...options\n            };\n            return {\n                ...queryTemplate,\n                input_message_content: content\n            };\n        },\n        invoice (title, description, payload, provider_token, currency, prices, options = {}) {\n            const content = {\n                title,\n                description,\n                payload,\n                provider_token,\n                currency,\n                prices,\n                ...options\n            };\n            return {\n                ...queryTemplate,\n                input_message_content: content\n            };\n        }\n    };\n}\nconst InlineQueryResultBuilder = {\n    article (id, title, options = {}) {\n        return inputMessageMethods({\n            type: \"article\",\n            id,\n            title,\n            ...options\n        });\n    },\n    audio (id, title, audio_url, options = {}) {\n        return inputMessage({\n            type: \"audio\",\n            id,\n            title,\n            audio_url: typeof audio_url === \"string\" ? audio_url : audio_url.href,\n            ...options\n        });\n    },\n    audioCached (id, audio_file_id, options = {}) {\n        return inputMessage({\n            type: \"audio\",\n            id,\n            audio_file_id,\n            ...options\n        });\n    },\n    contact (id, phone_number, first_name, options = {}) {\n        return inputMessage({\n            type: \"contact\",\n            id,\n            phone_number,\n            first_name,\n            ...options\n        });\n    },\n    documentPdf (id, title, document_url, options = {}) {\n        return inputMessage({\n            type: \"document\",\n            mime_type: \"application/pdf\",\n            id,\n            title,\n            document_url: typeof document_url === \"string\" ? document_url : document_url.href,\n            ...options\n        });\n    },\n    documentZip (id, title, document_url, options = {}) {\n        return inputMessage({\n            type: \"document\",\n            mime_type: \"application/zip\",\n            id,\n            title,\n            document_url: typeof document_url === \"string\" ? document_url : document_url.href,\n            ...options\n        });\n    },\n    documentCached (id, title, document_file_id, options = {}) {\n        return inputMessage({\n            type: \"document\",\n            id,\n            title,\n            document_file_id,\n            ...options\n        });\n    },\n    game (id, game_short_name, options = {}) {\n        return {\n            type: \"game\",\n            id,\n            game_short_name,\n            ...options\n        };\n    },\n    gif (id, gif_url, thumbnail_url, options = {}) {\n        return inputMessage({\n            type: \"gif\",\n            id,\n            gif_url: typeof gif_url === \"string\" ? gif_url : gif_url.href,\n            thumbnail_url: typeof thumbnail_url === \"string\" ? thumbnail_url : thumbnail_url.href,\n            ...options\n        });\n    },\n    gifCached (id, gif_file_id, options = {}) {\n        return inputMessage({\n            type: \"gif\",\n            id,\n            gif_file_id,\n            ...options\n        });\n    },\n    location (id, title, latitude, longitude, options = {}) {\n        return inputMessage({\n            type: \"location\",\n            id,\n            title,\n            latitude,\n            longitude,\n            ...options\n        });\n    },\n    mpeg4gif (id, mpeg4_url, thumbnail_url, options = {}) {\n        return inputMessage({\n            type: \"mpeg4_gif\",\n            id,\n            mpeg4_url: typeof mpeg4_url === \"string\" ? mpeg4_url : mpeg4_url.href,\n            thumbnail_url: typeof thumbnail_url === \"string\" ? thumbnail_url : thumbnail_url.href,\n            ...options\n        });\n    },\n    mpeg4gifCached (id, mpeg4_file_id, options = {}) {\n        return inputMessage({\n            type: \"mpeg4_gif\",\n            id,\n            mpeg4_file_id,\n            ...options\n        });\n    },\n    photo (id, photo_url, options = {\n        thumbnail_url: typeof photo_url === \"string\" ? photo_url : photo_url.href\n    }) {\n        return inputMessage({\n            type: \"photo\",\n            id,\n            photo_url: typeof photo_url === \"string\" ? photo_url : photo_url.href,\n            ...options\n        });\n    },\n    photoCached (id, photo_file_id, options = {}) {\n        return inputMessage({\n            type: \"photo\",\n            id,\n            photo_file_id,\n            ...options\n        });\n    },\n    stickerCached (id, sticker_file_id, options = {}) {\n        return inputMessage({\n            type: \"sticker\",\n            id,\n            sticker_file_id,\n            ...options\n        });\n    },\n    venue (id, title, latitude, longitude, address, options = {}) {\n        return inputMessage({\n            type: \"venue\",\n            id,\n            title,\n            latitude,\n            longitude,\n            address,\n            ...options\n        });\n    },\n    videoHtml (id, title, video_url, thumbnail_url, options = {}) {\n        return inputMessageMethods({\n            type: \"video\",\n            mime_type: \"text/html\",\n            id,\n            title,\n            video_url: typeof video_url === \"string\" ? video_url : video_url.href,\n            thumbnail_url: typeof thumbnail_url === \"string\" ? thumbnail_url : thumbnail_url.href,\n            ...options\n        });\n    },\n    videoMp4 (id, title, video_url, thumbnail_url, options = {}) {\n        return inputMessage({\n            type: \"video\",\n            mime_type: \"video/mp4\",\n            id,\n            title,\n            video_url: typeof video_url === \"string\" ? video_url : video_url.href,\n            thumbnail_url: typeof thumbnail_url === \"string\" ? thumbnail_url : thumbnail_url.href,\n            ...options\n        });\n    },\n    videoCached (id, title, video_file_id, options = {}) {\n        return inputMessage({\n            type: \"video\",\n            id,\n            title,\n            video_file_id,\n            ...options\n        });\n    },\n    voice (id, title, voice_url, options = {}) {\n        return inputMessage({\n            type: \"voice\",\n            id,\n            title,\n            voice_url: typeof voice_url === \"string\" ? voice_url : voice_url.href,\n            ...options\n        });\n    },\n    voiceCached (id, title, voice_file_id, options = {}) {\n        return inputMessage({\n            type: \"voice\",\n            id,\n            title,\n            voice_file_id,\n            ...options\n        });\n    }\n};\nexport { InlineQueryResultBuilder as InlineQueryResultBuilder };\nconst InputMediaBuilder = {\n    photo (media, options = {}) {\n        return {\n            type: \"photo\",\n            media,\n            ...options\n        };\n    },\n    video (media, options = {}) {\n        return {\n            type: \"video\",\n            media,\n            ...options\n        };\n    },\n    animation (media, options = {}) {\n        return {\n            type: \"animation\",\n            media,\n            ...options\n        };\n    },\n    audio (media, options = {}) {\n        return {\n            type: \"audio\",\n            media,\n            ...options\n        };\n    },\n    document (media, options = {}) {\n        return {\n            type: \"document\",\n            media,\n            ...options\n        };\n    }\n};\nexport { InputMediaBuilder as InputMediaBuilder };\nclass Keyboard {\n    keyboard;\n    is_persistent;\n    selective;\n    one_time_keyboard;\n    resize_keyboard;\n    input_field_placeholder;\n    constructor(keyboard = [\n        []\n    ]){\n        this.keyboard = keyboard;\n    }\n    add(...buttons) {\n        this.keyboard[this.keyboard.length - 1]?.push(...buttons);\n        return this;\n    }\n    row(...buttons) {\n        this.keyboard.push(buttons);\n        return this;\n    }\n    text(text) {\n        return this.add(Keyboard.text(text));\n    }\n    static text(text) {\n        return {\n            text\n        };\n    }\n    requestUsers(text, requestId, options = {}) {\n        return this.add(Keyboard.requestUsers(text, requestId, options));\n    }\n    static requestUsers(text, requestId, options = {}) {\n        return {\n            text,\n            request_users: {\n                request_id: requestId,\n                ...options\n            }\n        };\n    }\n    requestChat(text, requestId, options = {\n        chat_is_channel: false\n    }) {\n        return this.add(Keyboard.requestChat(text, requestId, options));\n    }\n    static requestChat(text, requestId, options = {\n        chat_is_channel: false\n    }) {\n        return {\n            text,\n            request_chat: {\n                request_id: requestId,\n                ...options\n            }\n        };\n    }\n    requestContact(text) {\n        return this.add(Keyboard.requestContact(text));\n    }\n    static requestContact(text) {\n        return {\n            text,\n            request_contact: true\n        };\n    }\n    requestLocation(text) {\n        return this.add(Keyboard.requestLocation(text));\n    }\n    static requestLocation(text) {\n        return {\n            text,\n            request_location: true\n        };\n    }\n    requestPoll(text, type) {\n        return this.add(Keyboard.requestPoll(text, type));\n    }\n    static requestPoll(text, type) {\n        return {\n            text,\n            request_poll: {\n                type\n            }\n        };\n    }\n    webApp(text, url) {\n        return this.add(Keyboard.webApp(text, url));\n    }\n    static webApp(text, url) {\n        return {\n            text,\n            web_app: {\n                url\n            }\n        };\n    }\n    persistent(isEnabled = true) {\n        this.is_persistent = isEnabled;\n        return this;\n    }\n    selected(isEnabled = true) {\n        this.selective = isEnabled;\n        return this;\n    }\n    oneTime(isEnabled = true) {\n        this.one_time_keyboard = isEnabled;\n        return this;\n    }\n    resized(isEnabled = true) {\n        this.resize_keyboard = isEnabled;\n        return this;\n    }\n    placeholder(value) {\n        this.input_field_placeholder = value;\n        return this;\n    }\n    toTransposed() {\n        const original = this.keyboard;\n        const transposed = transpose(original);\n        return this.clone(transposed);\n    }\n    toFlowed(columns, options = {}) {\n        const original = this.keyboard;\n        const flowed = reflow(original, columns, options);\n        return this.clone(flowed);\n    }\n    clone(keyboard = this.keyboard) {\n        const clone = new Keyboard(keyboard.map((row)=>row.slice()));\n        clone.is_persistent = this.is_persistent;\n        clone.selective = this.selective;\n        clone.one_time_keyboard = this.one_time_keyboard;\n        clone.resize_keyboard = this.resize_keyboard;\n        clone.input_field_placeholder = this.input_field_placeholder;\n        return clone;\n    }\n    append(...sources) {\n        for (const source of sources){\n            const keyboard = Keyboard.from(source);\n            this.keyboard.push(...keyboard.keyboard.map((row)=>row.slice()));\n        }\n        return this;\n    }\n    build() {\n        return this.keyboard;\n    }\n    static from(source) {\n        if (source instanceof Keyboard) return source.clone();\n        function toButton(btn) {\n            return typeof btn === \"string\" ? Keyboard.text(btn) : btn;\n        }\n        return new Keyboard(source.map((row)=>row.map(toButton)));\n    }\n}\nclass InlineKeyboard {\n    inline_keyboard;\n    constructor(inline_keyboard = [\n        []\n    ]){\n        this.inline_keyboard = inline_keyboard;\n    }\n    add(...buttons) {\n        this.inline_keyboard[this.inline_keyboard.length - 1]?.push(...buttons);\n        return this;\n    }\n    row(...buttons) {\n        this.inline_keyboard.push(buttons);\n        return this;\n    }\n    url(text, url) {\n        return this.add(InlineKeyboard.url(text, url));\n    }\n    static url(text, url) {\n        return {\n            text,\n            url\n        };\n    }\n    text(text, data = text) {\n        return this.add(InlineKeyboard.text(text, data));\n    }\n    static text(text, data = text) {\n        return {\n            text,\n            callback_data: data\n        };\n    }\n    webApp(text, url) {\n        return this.add(InlineKeyboard.webApp(text, url));\n    }\n    static webApp(text, url) {\n        return {\n            text,\n            web_app: typeof url === \"string\" ? {\n                url\n            } : url\n        };\n    }\n    login(text, loginUrl) {\n        return this.add(InlineKeyboard.login(text, loginUrl));\n    }\n    static login(text, loginUrl) {\n        return {\n            text,\n            login_url: typeof loginUrl === \"string\" ? {\n                url: loginUrl\n            } : loginUrl\n        };\n    }\n    switchInline(text, query = \"\") {\n        return this.add(InlineKeyboard.switchInline(text, query));\n    }\n    static switchInline(text, query = \"\") {\n        return {\n            text,\n            switch_inline_query: query\n        };\n    }\n    switchInlineCurrent(text, query = \"\") {\n        return this.add(InlineKeyboard.switchInlineCurrent(text, query));\n    }\n    static switchInlineCurrent(text, query = \"\") {\n        return {\n            text,\n            switch_inline_query_current_chat: query\n        };\n    }\n    switchInlineChosen(text, query = {}) {\n        return this.add(InlineKeyboard.switchInlineChosen(text, query));\n    }\n    static switchInlineChosen(text, query = {}) {\n        return {\n            text,\n            switch_inline_query_chosen_chat: query\n        };\n    }\n    copyText(text, copyText) {\n        return this.add(InlineKeyboard.copyText(text, copyText));\n    }\n    static copyText(text, copyText) {\n        return {\n            text,\n            copy_text: typeof copyText === \"string\" ? {\n                text: copyText\n            } : copyText\n        };\n    }\n    game(text) {\n        return this.add(InlineKeyboard.game(text));\n    }\n    static game(text) {\n        return {\n            text,\n            callback_game: {}\n        };\n    }\n    pay(text) {\n        return this.add(InlineKeyboard.pay(text));\n    }\n    static pay(text) {\n        return {\n            text,\n            pay: true\n        };\n    }\n    toTransposed() {\n        const original = this.inline_keyboard;\n        const transposed = transpose(original);\n        return new InlineKeyboard(transposed);\n    }\n    toFlowed(columns, options = {}) {\n        const original = this.inline_keyboard;\n        const flowed = reflow(original, columns, options);\n        return new InlineKeyboard(flowed);\n    }\n    clone() {\n        return new InlineKeyboard(this.inline_keyboard.map((row)=>row.slice()));\n    }\n    append(...sources) {\n        for (const source of sources){\n            const keyboard = InlineKeyboard.from(source);\n            this.inline_keyboard.push(...keyboard.inline_keyboard.map((row)=>row.slice()));\n        }\n        return this;\n    }\n    static from(source) {\n        if (source instanceof InlineKeyboard) return source.clone();\n        return new InlineKeyboard(source.map((row)=>row.slice()));\n    }\n}\nfunction transpose(grid) {\n    const transposed = [];\n    for(let i = 0; i < grid.length; i++){\n        const row = grid[i];\n        for(let j = 0; j < row.length; j++){\n            const button = row[j];\n            (transposed[j] ??= []).push(button);\n        }\n    }\n    return transposed;\n}\nfunction reflow(grid, columns, { fillLastRow = false }) {\n    let first = columns;\n    if (fillLastRow) {\n        const buttonCount = grid.map((row)=>row.length).reduce((a, b)=>a + b, 0);\n        first = buttonCount % columns;\n    }\n    const reflowed = [];\n    for (const row of grid){\n        for (const button of row){\n            const at = Math.max(0, reflowed.length - 1);\n            const max = at === 0 ? first : columns;\n            let next = reflowed[at] ??= [];\n            if (next.length === max) {\n                next = [];\n                reflowed.push(next);\n            }\n            next.push(button);\n        }\n    }\n    return reflowed;\n}\nexport { Keyboard as Keyboard };\nexport { InlineKeyboard as InlineKeyboard };\nconst debug3 = browser$1(\"grammy:session\");\nfunction session(options = {}) {\n    return options.type === \"multi\" ? strictMultiSession(options) : strictSingleSession(options);\n}\nfunction strictSingleSession(options) {\n    const { initial, storage, getSessionKey, custom } = fillDefaults(options);\n    return async (ctx, next)=>{\n        const propSession = new PropertySession(storage, ctx, \"session\", initial);\n        const key = await getSessionKey(ctx);\n        await propSession.init(key, {\n            custom,\n            lazy: false\n        });\n        await next();\n        await propSession.finish();\n    };\n}\nfunction strictMultiSession(options) {\n    const props = Object.keys(options).filter((k)=>k !== \"type\");\n    const defaults = Object.fromEntries(props.map((prop)=>[\n            prop,\n            fillDefaults(options[prop])\n        ]));\n    return async (ctx, next)=>{\n        ctx.session = {};\n        const propSessions = await Promise.all(props.map(async (prop)=>{\n            const { initial, storage, getSessionKey, custom } = defaults[prop];\n            const s = new PropertySession(storage, ctx.session, prop, initial);\n            const key = await getSessionKey(ctx);\n            await s.init(key, {\n                custom,\n                lazy: false\n            });\n            return s;\n        }));\n        await next();\n        if (ctx.session == null) propSessions.forEach((s)=>s.delete());\n        await Promise.all(propSessions.map((s)=>s.finish()));\n    };\n}\nfunction lazySession(options = {}) {\n    if (options.type !== undefined && options.type !== \"single\") {\n        throw new Error(\"Cannot use lazy multi sessions!\");\n    }\n    const { initial, storage, getSessionKey, custom } = fillDefaults(options);\n    return async (ctx, next)=>{\n        const propSession = new PropertySession(storage, ctx, \"session\", initial);\n        const key = await getSessionKey(ctx);\n        await propSession.init(key, {\n            custom,\n            lazy: true\n        });\n        await next();\n        await propSession.finish();\n    };\n}\nclass PropertySession {\n    storage;\n    obj;\n    prop;\n    initial;\n    key;\n    value;\n    promise;\n    fetching;\n    read;\n    wrote;\n    constructor(storage, obj, prop, initial){\n        this.storage = storage;\n        this.obj = obj;\n        this.prop = prop;\n        this.initial = initial;\n        this.fetching = false;\n        this.read = false;\n        this.wrote = false;\n    }\n    load() {\n        if (this.key === undefined) {\n            return;\n        }\n        if (this.wrote) {\n            return;\n        }\n        if (this.promise === undefined) {\n            this.fetching = true;\n            this.promise = Promise.resolve(this.storage.read(this.key)).then((val)=>{\n                this.fetching = false;\n                if (this.wrote) {\n                    return this.value;\n                }\n                if (val !== undefined) {\n                    this.value = val;\n                    return val;\n                }\n                val = this.initial?.();\n                if (val !== undefined) {\n                    this.wrote = true;\n                    this.value = val;\n                }\n                return val;\n            });\n        }\n        return this.promise;\n    }\n    async init(key, opts) {\n        this.key = key;\n        if (!opts.lazy) await this.load();\n        Object.defineProperty(this.obj, this.prop, {\n            enumerable: true,\n            get: ()=>{\n                if (key === undefined) {\n                    const msg = undef(\"access\", opts);\n                    throw new Error(msg);\n                }\n                this.read = true;\n                if (!opts.lazy || this.wrote) return this.value;\n                this.load();\n                return this.fetching ? this.promise : this.value;\n            },\n            set: (v)=>{\n                if (key === undefined) {\n                    const msg = undef(\"assign\", opts);\n                    throw new Error(msg);\n                }\n                this.wrote = true;\n                this.fetching = false;\n                this.value = v;\n            }\n        });\n    }\n    delete() {\n        Object.assign(this.obj, {\n            [this.prop]: undefined\n        });\n    }\n    async finish() {\n        if (this.key !== undefined) {\n            if (this.read) await this.load();\n            if (this.read || this.wrote) {\n                const value = await this.value;\n                if (value == null) await this.storage.delete(this.key);\n                else await this.storage.write(this.key, value);\n            }\n        }\n    }\n}\nfunction fillDefaults(opts = {}) {\n    let { prefix = \"\", getSessionKey = defaultGetSessionKey, initial, storage } = opts;\n    if (storage == null) {\n        debug3(\"Storing session data in memory, all data will be lost when the bot restarts.\");\n        storage = new MemorySessionStorage();\n    }\n    const custom = getSessionKey !== defaultGetSessionKey;\n    return {\n        initial,\n        storage,\n        getSessionKey: async (ctx)=>{\n            const key = await getSessionKey(ctx);\n            return key === undefined ? undefined : prefix + key;\n        },\n        custom\n    };\n}\nfunction defaultGetSessionKey(ctx) {\n    return ctx.chatId?.toString();\n}\nfunction undef(op, opts) {\n    const { lazy = false, custom } = opts;\n    const reason = custom ? \"the custom `getSessionKey` function returned undefined for this update\" : \"this update does not belong to a chat, so the session key is undefined\";\n    return `Cannot ${op} ${lazy ? \"lazy \" : \"\"}session data because ${reason}!`;\n}\nfunction isEnhance(value) {\n    return value === undefined || typeof value === \"object\" && value !== null && \"__d\" in value;\n}\nfunction enhanceStorage(options) {\n    let { storage, millisecondsToLive, migrations } = options;\n    storage = compatStorage(storage);\n    if (millisecondsToLive !== undefined) {\n        storage = timeoutStorage(storage, millisecondsToLive);\n    }\n    if (migrations !== undefined) {\n        storage = migrationStorage(storage, migrations);\n    }\n    return wrapStorage(storage);\n}\nfunction compatStorage(storage) {\n    return {\n        read: async (k)=>{\n            const v = await storage.read(k);\n            return isEnhance(v) ? v : {\n                __d: v\n            };\n        },\n        write: (k, v)=>storage.write(k, v),\n        delete: (k)=>storage.delete(k)\n    };\n}\nfunction timeoutStorage(storage, millisecondsToLive) {\n    const ttlStorage = {\n        read: async (k)=>{\n            const value = await storage.read(k);\n            if (value === undefined) return undefined;\n            if (value.e === undefined) {\n                await ttlStorage.write(k, value);\n                return value;\n            }\n            if (value.e < Date.now()) {\n                await ttlStorage.delete(k);\n                return undefined;\n            }\n            return value;\n        },\n        write: async (k, v)=>{\n            v.e = addExpiryDate(v, millisecondsToLive).expires;\n            await storage.write(k, v);\n        },\n        delete: (k)=>storage.delete(k)\n    };\n    return ttlStorage;\n}\nfunction migrationStorage(storage, migrations) {\n    const versions = Object.keys(migrations).map((v)=>parseInt(v)).sort((a, b)=>a - b);\n    const count = versions.length;\n    if (count === 0) throw new Error(\"No migrations given!\");\n    const earliest = versions[0];\n    const last = count - 1;\n    const latest = versions[last];\n    const index = new Map();\n    versions.forEach((v, i)=>index.set(v, i));\n    function nextAfter(current) {\n        let i = last;\n        while(current <= versions[i])i--;\n        return i;\n    }\n    return {\n        read: async (k)=>{\n            const val = await storage.read(k);\n            if (val === undefined) return val;\n            let { __d: value, v: current = earliest - 1 } = val;\n            let i = 1 + (index.get(current) ?? nextAfter(current));\n            for(; i < count; i++)value = migrations[versions[i]](value);\n            return {\n                ...val,\n                v: latest,\n                __d: value\n            };\n        },\n        write: (k, v)=>storage.write(k, {\n                v: latest,\n                ...v\n            }),\n        delete: (k)=>storage.delete(k)\n    };\n}\nfunction wrapStorage(storage) {\n    return {\n        read: (k)=>Promise.resolve(storage.read(k)).then((v)=>v?.__d),\n        write: (k, v)=>storage.write(k, {\n                __d: v\n            }),\n        delete: (k)=>storage.delete(k)\n    };\n}\nclass MemorySessionStorage {\n    timeToLive;\n    storage;\n    constructor(timeToLive){\n        this.timeToLive = timeToLive;\n        this.storage = new Map();\n    }\n    read(key) {\n        const value = this.storage.get(key);\n        if (value === undefined) return undefined;\n        if (value.expires !== undefined && value.expires < Date.now()) {\n            this.delete(key);\n            return undefined;\n        }\n        return value.session;\n    }\n    readAll() {\n        return this.readAllValues();\n    }\n    readAllKeys() {\n        return Array.from(this.storage.keys());\n    }\n    readAllValues() {\n        return Array.from(this.storage.keys()).map((key)=>this.read(key)).filter((value)=>value !== undefined);\n    }\n    readAllEntries() {\n        return Array.from(this.storage.keys()).map((key)=>[\n                key,\n                this.read(key)\n            ]).filter((pair)=>pair[1] !== undefined);\n    }\n    has(key) {\n        return this.storage.has(key);\n    }\n    write(key, value) {\n        this.storage.set(key, addExpiryDate(value, this.timeToLive));\n    }\n    delete(key) {\n        this.storage.delete(key);\n    }\n}\nfunction addExpiryDate(value, ttl) {\n    if (ttl !== undefined && ttl < Infinity) {\n        const now = Date.now();\n        return {\n            session: value,\n            expires: now + ttl\n        };\n    } else {\n        return {\n            session: value\n        };\n    }\n}\nexport { session as session };\nexport { lazySession as lazySession };\nexport { enhanceStorage as enhanceStorage };\nexport { MemorySessionStorage as MemorySessionStorage };\nconst SECRET_HEADER = \"X-Telegram-Bot-Api-Secret-Token\";\nconst SECRET_HEADER_LOWERCASE = SECRET_HEADER.toLowerCase();\nconst WRONG_TOKEN_ERROR = \"secret token is wrong\";\nconst ok = ()=>new Response(null, {\n        status: 200\n    });\nconst okJson = (json)=>new Response(json, {\n        status: 200,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\nconst unauthorized = ()=>new Response('\"unauthorized\"', {\n        status: 401,\n        statusText: WRONG_TOKEN_ERROR\n    });\nconst awsLambda = (event, _context, callback)=>({\n        update: JSON.parse(event.body ?? \"{}\"),\n        header: event.headers[SECRET_HEADER],\n        end: ()=>callback(null, {\n                statusCode: 200\n            }),\n        respond: (json)=>callback(null, {\n                statusCode: 200,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: json\n            }),\n        unauthorized: ()=>callback(null, {\n                statusCode: 401\n            })\n    });\nconst awsLambdaAsync = (event, _context)=>{\n    let resolveResponse;\n    return {\n        update: JSON.parse(event.body ?? \"{}\"),\n        header: event.headers[SECRET_HEADER],\n        end: ()=>resolveResponse({\n                statusCode: 200\n            }),\n        respond: (json)=>resolveResponse({\n                statusCode: 200,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: json\n            }),\n        unauthorized: ()=>resolveResponse({\n                statusCode: 401\n            }),\n        handlerReturn: new Promise((resolve)=>{\n            resolveResponse = resolve;\n        })\n    };\n};\nconst azure = (request, context)=>({\n        update: Promise.resolve(request.body),\n        header: context.res?.headers?.[SECRET_HEADER],\n        end: ()=>context.res = {\n                status: 200,\n                body: \"\"\n            },\n        respond: (json)=>{\n            context.res?.set?.(\"Content-Type\", \"application/json\");\n            context.res?.send?.(json);\n        },\n        unauthorized: ()=>{\n            context.res?.send?.(401, WRONG_TOKEN_ERROR);\n        }\n    });\nconst bun = (request)=>{\n    let resolveResponse;\n    return {\n        update: request.json(),\n        header: request.headers.get(SECRET_HEADER) || undefined,\n        end: ()=>{\n            resolveResponse(ok());\n        },\n        respond: (json)=>{\n            resolveResponse(okJson(json));\n        },\n        unauthorized: ()=>{\n            resolveResponse(unauthorized());\n        },\n        handlerReturn: new Promise((resolve)=>{\n            resolveResponse = resolve;\n        })\n    };\n};\nconst cloudflare = (event)=>{\n    let resolveResponse;\n    event.respondWith(new Promise((resolve)=>{\n        resolveResponse = resolve;\n    }));\n    return {\n        update: event.request.json(),\n        header: event.request.headers.get(SECRET_HEADER) || undefined,\n        end: ()=>{\n            resolveResponse(ok());\n        },\n        respond: (json)=>{\n            resolveResponse(okJson(json));\n        },\n        unauthorized: ()=>{\n            resolveResponse(unauthorized());\n        }\n    };\n};\nconst cloudflareModule = (request)=>{\n    let resolveResponse;\n    return {\n        update: request.json(),\n        header: request.headers.get(SECRET_HEADER) || undefined,\n        end: ()=>{\n            resolveResponse(ok());\n        },\n        respond: (json)=>{\n            resolveResponse(okJson(json));\n        },\n        unauthorized: ()=>{\n            resolveResponse(unauthorized());\n        },\n        handlerReturn: new Promise((resolve)=>{\n            resolveResponse = resolve;\n        })\n    };\n};\nconst express = (req, res)=>({\n        update: Promise.resolve(req.body),\n        header: req.header(SECRET_HEADER),\n        end: ()=>res.end(),\n        respond: (json)=>{\n            res.set(\"Content-Type\", \"application/json\");\n            res.send(json);\n        },\n        unauthorized: ()=>{\n            res.status(401).send(WRONG_TOKEN_ERROR);\n        }\n    });\nconst fastify = (request, reply)=>({\n        update: Promise.resolve(request.body),\n        header: request.headers[SECRET_HEADER_LOWERCASE],\n        end: ()=>reply.status(200).send(),\n        respond: (json)=>reply.headers({\n                \"Content-Type\": \"application/json\"\n            }).send(json),\n        unauthorized: ()=>reply.code(401).send(WRONG_TOKEN_ERROR)\n    });\nconst hono = (c)=>{\n    let resolveResponse;\n    return {\n        update: c.req.json(),\n        header: c.req.header(SECRET_HEADER),\n        end: ()=>{\n            resolveResponse(c.body(\"\"));\n        },\n        respond: (json)=>{\n            resolveResponse(c.json(json));\n        },\n        unauthorized: ()=>{\n            c.status(401);\n            resolveResponse(c.body(\"\"));\n        },\n        handlerReturn: new Promise((resolve)=>{\n            resolveResponse = resolve;\n        })\n    };\n};\nconst http = (req, res)=>{\n    const secretHeaderFromRequest = req.headers[SECRET_HEADER_LOWERCASE];\n    return {\n        update: new Promise((resolve, reject)=>{\n            const chunks = [];\n            req.on(\"data\", (chunk)=>chunks.push(chunk)).once(\"end\", ()=>{\n                const raw = Buffer.concat(chunks).toString(\"utf-8\");\n                resolve(JSON.parse(raw));\n            }).once(\"error\", reject);\n        }),\n        header: Array.isArray(secretHeaderFromRequest) ? secretHeaderFromRequest[0] : secretHeaderFromRequest,\n        end: ()=>res.end(),\n        respond: (json)=>res.writeHead(200, {\n                \"Content-Type\": \"application/json\"\n            }).end(json),\n        unauthorized: ()=>res.writeHead(401).end(WRONG_TOKEN_ERROR)\n    };\n};\nconst koa = (ctx)=>({\n        update: Promise.resolve(ctx.request.body),\n        header: ctx.get(SECRET_HEADER) || undefined,\n        end: ()=>{\n            ctx.body = \"\";\n        },\n        respond: (json)=>{\n            ctx.set(\"Content-Type\", \"application/json\");\n            ctx.response.body = json;\n        },\n        unauthorized: ()=>{\n            ctx.status = 401;\n        }\n    });\nconst nextJs = (request, response)=>({\n        update: Promise.resolve(request.body),\n        header: request.headers[SECRET_HEADER_LOWERCASE],\n        end: ()=>response.end(),\n        respond: (json)=>response.status(200).json(json),\n        unauthorized: ()=>response.status(401).send(WRONG_TOKEN_ERROR)\n    });\nconst nhttp = (rev)=>({\n        update: Promise.resolve(rev.body),\n        header: rev.headers.get(SECRET_HEADER) || undefined,\n        end: ()=>rev.response.sendStatus(200),\n        respond: (json)=>rev.response.status(200).send(json),\n        unauthorized: ()=>rev.response.status(401).send(WRONG_TOKEN_ERROR)\n    });\nconst oak = (ctx)=>({\n        update: ctx.request.body.json(),\n        header: ctx.request.headers.get(SECRET_HEADER) || undefined,\n        end: ()=>{\n            ctx.response.status = 200;\n        },\n        respond: (json)=>{\n            ctx.response.type = \"json\";\n            ctx.response.body = json;\n        },\n        unauthorized: ()=>{\n            ctx.response.status = 401;\n        }\n    });\nconst serveHttp = (requestEvent)=>({\n        update: requestEvent.request.json(),\n        header: requestEvent.request.headers.get(SECRET_HEADER) || undefined,\n        end: ()=>requestEvent.respondWith(ok()),\n        respond: (json)=>requestEvent.respondWith(okJson(json)),\n        unauthorized: ()=>requestEvent.respondWith(unauthorized())\n    });\nconst stdHttp = (req)=>{\n    let resolveResponse;\n    return {\n        update: req.json(),\n        header: req.headers.get(SECRET_HEADER) || undefined,\n        end: ()=>{\n            if (resolveResponse) resolveResponse(ok());\n        },\n        respond: (json)=>{\n            if (resolveResponse) resolveResponse(okJson(json));\n        },\n        unauthorized: ()=>{\n            if (resolveResponse) resolveResponse(unauthorized());\n        },\n        handlerReturn: new Promise((resolve)=>{\n            resolveResponse = resolve;\n        })\n    };\n};\nconst sveltekit = ({ request })=>{\n    let resolveResponse;\n    return {\n        update: Promise.resolve(request.json()),\n        header: request.headers.get(SECRET_HEADER) || undefined,\n        end: ()=>{\n            if (resolveResponse) resolveResponse(ok());\n        },\n        respond: (json)=>{\n            if (resolveResponse) resolveResponse(okJson(json));\n        },\n        unauthorized: ()=>{\n            if (resolveResponse) resolveResponse(unauthorized());\n        },\n        handlerReturn: new Promise((resolve)=>{\n            resolveResponse = resolve;\n        })\n    };\n};\nconst worktop = (req, res)=>({\n        update: Promise.resolve(req.json()),\n        header: req.headers.get(SECRET_HEADER) ?? undefined,\n        end: ()=>res.end(null),\n        respond: (json)=>res.send(200, json),\n        unauthorized: ()=>res.send(401, WRONG_TOKEN_ERROR)\n    });\nconst adapters = {\n    \"aws-lambda\": awsLambda,\n    \"aws-lambda-async\": awsLambdaAsync,\n    azure,\n    bun,\n    cloudflare,\n    \"cloudflare-mod\": cloudflareModule,\n    express,\n    fastify,\n    hono,\n    http,\n    https: http,\n    koa,\n    \"next-js\": nextJs,\n    nhttp,\n    oak,\n    serveHttp,\n    \"std/http\": stdHttp,\n    sveltekit,\n    worktop\n};\nconst debugErr1 = browser$1(\"grammy:error\");\nconst callbackAdapter = (update, callback, header, unauthorized = ()=>callback('\"unauthorized\"'))=>({\n        update: Promise.resolve(update),\n        respond: callback,\n        header,\n        unauthorized\n    });\nconst adapters1 = {\n    ...adapters,\n    callback: callbackAdapter\n};\nfunction webhookCallback(bot, adapter = defaultAdapter, onTimeout, timeoutMilliseconds, secretToken) {\n    if (bot.isRunning()) {\n        throw new Error(\"Bot is already running via long polling, the webhook setup won't receive any updates!\");\n    } else {\n        bot.start = ()=>{\n            throw new Error(\"You already started the bot via webhooks, calling `bot.start()` starts the bot with long polling and this will prevent your webhook setup from receiving any updates!\");\n        };\n    }\n    const { onTimeout: timeout = \"throw\", timeoutMilliseconds: ms = 10_000, secretToken: token } = typeof onTimeout === \"object\" ? onTimeout : {\n        onTimeout,\n        timeoutMilliseconds,\n        secretToken\n    };\n    let initialized = false;\n    const server = typeof adapter === \"string\" ? adapters1[adapter] : adapter;\n    return async (...args)=>{\n        const { update, respond, unauthorized, end, handlerReturn, header } = server(...args);\n        if (!initialized) {\n            await bot.init();\n            initialized = true;\n        }\n        if (header !== token) {\n            await unauthorized();\n            console.log(handlerReturn);\n            return handlerReturn;\n        }\n        let usedWebhookReply = false;\n        const webhookReplyEnvelope = {\n            async send (json) {\n                usedWebhookReply = true;\n                await respond(json);\n            }\n        };\n        await timeoutIfNecessary(bot.handleUpdate(await update, webhookReplyEnvelope), typeof timeout === \"function\" ? ()=>timeout(...args) : timeout, ms);\n        if (!usedWebhookReply) end?.();\n        return handlerReturn;\n    };\n}\nfunction timeoutIfNecessary(task, onTimeout, timeout) {\n    if (timeout === Infinity) return task;\n    return new Promise((resolve, reject)=>{\n        const handle = setTimeout(()=>{\n            debugErr1(`Request timed out after ${timeout} ms`);\n            if (onTimeout === \"throw\") {\n                reject(new Error(`Request timed out after ${timeout} ms`));\n            } else {\n                if (typeof onTimeout === \"function\") onTimeout();\n                resolve();\n            }\n            const now = Date.now();\n            task.finally(()=>{\n                const diff = Date.now() - now;\n                debugErr1(`Request completed ${diff} ms after timeout!`);\n            });\n        }, timeout);\n        task.then(resolve).catch(reject).finally(()=>clearTimeout(handle));\n    });\n}\nexport { webhookCallback as webhookCallback };\nexport { Bot as Bot, BotError as BotError };\nexport { InputFile as InputFile };\nexport { Context as Context };\nexport { Composer as Composer };\nexport { matchFilter as matchFilter };\nexport { Api as Api };\nexport { GrammyError as GrammyError, HttpError as HttpError };\n", "import { toHijri } from \"hijri-converter\";\r\n\r\n// Arabic day and month mappings\r\nconst ARABIC_DAYS = [\r\n  \"\u0627\u0644\u0623\u062D\u062F\",\r\n  \"\u0627\u0644\u0625\u062B\u0646\u064A\u0646\",\r\n  \"\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621\",\r\n  \"\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621\",\r\n  \"\u0627\u0644\u062E\u0645\u064A\u0633\",\r\n  \"\u0627\u0644\u062C\u0645\u0639\u0629\",\r\n  \"\u0627\u0644\u0633\u0628\u062A\",\r\n];\r\nconst ARABIC_MONTHS: { [key: number]: string } = {\r\n  1: \"\u0645\u062D\u0631\u0645\",\r\n  2: \"\u0635\u0641\u0631\",\r\n  3: \"\u0631\u0628\u064A\u0639 \u0627\u0644\u0623\u0648\u0644\",\r\n  4: \"\u0631\u0628\u064A\u0639 \u0627\u0644\u062B\u0627\u0646\u064A\",\r\n  5: \"\u062C\u0645\u0627\u062F\u0649 \u0627\u0644\u0623\u0648\u0644\u0649\",\r\n  6: \"\u062C\u0645\u0627\u062F\u0649 \u0627\u0644\u0622\u062E\u0631\u0629\",\r\n  7: \"\u0631\u062C\u0628\",\r\n  8: \"\u0634\u0639\u0628\u0627\u0646\",\r\n  9: \"\u0631\u0645\u0636\u0627\u0646\",\r\n  10: \"\u0634\u0648\u0627\u0644\",\r\n  11: \"\u0630\u0648 \u0627\u0644\u0642\u0639\u062F\u0629\",\r\n  12: \"\u0630\u0648 \u0627\u0644\u062D\u062C\u0629\",\r\n};\r\n\r\nexport function getHijriDate() {\r\n  const today = new Date();\r\n\r\n  // 1. Get Gregorian date components\r\n  const gYear = today.getFullYear();\r\n  const gMonth = today.getMonth() + 1; // JS months are 0-indexed\r\n  const gDay = today.getDate();\r\n\r\n  // 2. Convert to Hijri\r\n  const hijriDate = toHijri(gYear, gMonth, gDay);\r\n\r\n  // 3. Calculate week of the month\r\n  const weekNumber = Math.ceil(hijriDate.hd / 7);\r\n\r\n  // 4. Get Arabic day name\r\n  const dayOfWeek = today.getDay(); // 0 (Sunday) to 6 (Saturday)\r\n  const arabicDay = ARABIC_DAYS[dayOfWeek];\r\n\r\n  // 5. Get Arabic month name\r\n  const arabicMonth = ARABIC_MONTHS[hijriDate.hm];\r\n\r\n  // 6. Format the output\r\n  return `${arabicDay} - \u0627\u0644\u0627\u0633\u0628\u0648\u0639 #${weekNumber} \u0645\u0646 \u0634\u0647\u0631 ${arabicMonth}`;\r\n}\r\n", "import { getHijriDate } from \"@/helpers/getHijriDate\";\r\n\r\nexport type PollType = \"daily\" | \"weekly\" | \"custom\";\r\n\r\nexport interface PollContent {\r\n  question: string;\r\n  // set minimum 2 text options\r\n  options: { text: string }[];\r\n  duration: number;\r\n}\r\n\r\nexport const pollConfigurations: {\r\n  type: PollType;\r\n  content: PollContent;\r\n  duration?: number;\r\n}[] = [\r\n  {\r\n    type: \"custom\",\r\n    content: {\r\n      question: `\u0627\u0644\u0645\u062A\u0627\u0628\u0639\u0629 \u0627\u0644\u064A\u0648\u0645\u064A\u0629:\\n${getHijriDate()}`,\r\n      options: [\r\n        { text: \"\u0627\u0644\u0635\u0644\u0627\u0629 5 \u0641\u0631\u0627\u0626\u0636\" },\r\n        { text: \"\u0635\u0644\u0627\u0629 \u0627\u0644\u0646\u0648\u0627\u0641\u0644 (6 \u0631\u0643\u0627\u062A \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644)\" },\r\n      ],\r\n      duration: 2 * 60 * 1000,\r\n    },\r\n  },\r\n  {\r\n    type: \"daily\",\r\n    content: {\r\n      question: `\u0627\u0644\u0645\u062A\u0627\u0628\u0639\u0629 \u0627\u0644\u064A\u0648\u0645\u064A\u0629:\\n${getHijriDate()}`,\r\n      options: [\r\n        { text: \"\u0627\u0644\u0635\u0644\u0627\u0629 5 \u0641\u0631\u0627\u0626\u0636\" },\r\n        { text: \"\u0635\u0644\u0627\u0629 \u0627\u0644\u0646\u0648\u0627\u0641\u0644 (6 \u0631\u0643\u0627\u062A \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644)\" },\r\n        { text: \"\u0627\u0644\u0635\u0644\u0627\u0629 \u0639\u0644\u0649 \u0627\u0644\u0646\u0628\u064A\" },\r\n        { text: \"\u0623\u0630\u0643\u0627\u0631 \u0627\u0644\u0635\u0628\u0627\u062D \u0648 \u0627\u0644\u0645\u0633\u0627\u0621\" },\r\n        { text: \"\u0648\u0631\u062F \u0627\u0644\u0642\u0631\u0627\u0646\" },\r\n        { text: \"\u0627\u0644\u0636\u062D\u0649\" },\r\n      ],\r\n      duration: 24 * 3600 * 1000, // will expire after 1 day\r\n    },\r\n  },\r\n  {\r\n    type: \"weekly\",\r\n    content: {\r\n      question: `\u0627\u0644\u0645\u062A\u0627\u0628\u0639\u0629 \u0627\u0644\u0623\u0633\u0628\u0648\u0639\u064A\u0629:\\n${getHijriDate()}`,\r\n      options: [\r\n        { text: \"\u0627\u0644\u0635\u0644\u0627\u0629 5 \u0641\u0631\u0627\u0626\u0636\" },\r\n        { text: \"\u0635\u0644\u0627\u0629 \u0627\u0644\u0646\u0648\u0627\u0641\u0644 (6 \u0631\u0643\u0627\u062A \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644)\" },\r\n        { text: \"\u0627\u0644\u0635\u0644\u0627\u0629 \u0639\u0644\u0649 \u0627\u0644\u0646\u0628\u064A\" },\r\n        { text: \"\u0623\u0630\u0643\u0627\u0631 \u0627\u0644\u0635\u0628\u0627\u062D \u0648 \u0627\u0644\u0645\u0633\u0627\u0621\" },\r\n        { text: \"\u0648\u0631\u062F \u0627\u0644\u0642\u0631\u0627\u0646\" },\r\n        { text: \"\u0627\u0644\u0636\u062D\u0649\" },\r\n      ],\r\n      duration: 7 * 24 * 3600 * 1000, // ill expire after 1 week\r\n    },\r\n  },\r\n];\r\n", "import { Bot } from \"grammy\";\r\nimport { Env } from \"@/types\";\r\nimport { PollContent, PollType, pollConfigurations } from \"./content\";\r\nimport { cronToHumanReadable } from \"@/helpers/corn/cronToHumanReadable\";\r\n\r\ninterface ActivePoll {\r\n  messageId: number;\r\n  stopTime: number;\r\n}\r\n\r\nexport async function setupPollSchedulers(bot: Bot, env: Env, type: PollType) {\r\n  const config = pollConfigurations.find((c) => c.type === type);\r\n  if (!config) return;\r\n\r\n  console.log(`[DEBUG] Starting ${type} poll at ${new Date().toISOString()}`);\r\n  console.log(\r\n    `[DEBUG] Will auto-stop at ${new Date(\r\n      Date.now() + (config.duration ?? 0)\r\n    ).toISOString()}`\r\n  );\r\n\r\n  try {\r\n    const { question, options } = config.content;\r\n    const pollMessage = await bot.api.sendPoll(\r\n      env.CHANNEL_ID,\r\n      question,\r\n      options,\r\n      {\r\n        is_anonymous: true,\r\n        allows_multiple_answers: true,\r\n      }\r\n    );\r\n\r\n    // Store in KV for later stop\r\n    const activePoll: ActivePoll = {\r\n      messageId: pollMessage.message_id,\r\n      stopTime: Date.now() + (config.duration ?? 0),\r\n    };\r\n\r\n    await env.POLL_STORE.put(`poll:${type}`, JSON.stringify(activePoll));\r\n    console.log(`${type} poll started: ${pollMessage.message_id}`);\r\n  } catch (error) {\r\n    console.error(`Failed to start ${type} poll:`, error);\r\n  }\r\n}\r\n\r\n// Add this to periodically check for polls to stop\r\nexport async function checkExpiredPolls(bot: Bot, env: Env) {\r\n  const now = Date.now();\r\n\r\n  for (const type of [\"daily\", \"weekly\", \"custom\"]) {\r\n    const pollData = await env.POLL_STORE.get(`poll:${type}`);\r\n    if (!pollData) continue;\r\n\r\n    const poll: ActivePoll = JSON.parse(pollData);\r\n    if (poll.stopTime <= now) {\r\n      try {\r\n        await bot.api.stopPoll(env.CHANNEL_ID, poll.messageId);\r\n        await env.POLL_STORE.delete(`poll:${type}`);\r\n        console.log(`Stopped ${type} poll: ${poll.messageId}`);\r\n      } catch (error) {\r\n        console.error(`Error stopping ${type} poll:`, error);\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { Bot } from \"grammy\";\r\n\r\nexport function createBot(token: string) {\r\n  const bot = new Bot(token);\r\n\r\n  bot.command(\"start\", async (ctx) => {\r\n    await ctx.reply(\"Hello, world!\");\r\n    console.log(\"Start command processed\");\r\n  });\r\n\r\n  bot.on(\"message\", (ctx) => {\r\n    console.log(\"Received message:\", ctx.message);\r\n    ctx.reply(\"Got your message!\");\r\n  });\r\n\r\n  return bot;\r\n}\r\n", "import { Bot } from \"grammy\";\r\nimport { setupPollSchedulers } from \"./bot/polls/scheduler\";\r\nimport type { Env } from \"@/types\";\r\nimport { createBot } from \"./bot\";\r\n\r\nasync function handleLocalTesting(request: Request, env: Env) {\r\n  const url = new URL(request.url);\r\n\r\n  if (url.pathname === \"/test-cron\") {\r\n    await setupPollSchedulers(new Bot(env.BOT_TOKEN), env, \"daily\");\r\n    await setupPollSchedulers(new Bot(env.BOT_TOKEN), env, \"weekly\");\r\n    return new Response(\"Test cron executed\");\r\n  }\r\n\r\n  return new Response(\"Not Found\", { status: 404 });\r\n}\r\n\r\nexport default {\r\n  async fetch(request: Request, env: Env): Promise<Response> {\r\n    const bot = createBot(env.BOT_TOKEN);\r\n\r\n    console.log(\"Incoming request:\", {\r\n      method: request.method,\r\n      url: request.url,\r\n      headers: Object.fromEntries(request.headers),\r\n    });\r\n\r\n    // Handle Telegram webhook\r\n    if (request.method === \"POST\") {\r\n      try {\r\n        const update = await request.json();\r\n        console.log(\r\n          \"Received update payload:\",\r\n          JSON.stringify(update, null, 2)\r\n        );\r\n\r\n        const bot = createBot(env.BOT_TOKEN);\r\n        //@ts-expect-error - `handleUpdate` is not defined in the type definitions\r\n        await bot.handleUpdate(update);\r\n\r\n        return new Response(\"OK\");\r\n      } catch (error) {\r\n        return new Response(\"Error\", { status: 500 });\r\n      }\r\n    }\r\n\r\n    return new Response(\"Not Found\", { status: 404 });\r\n  },\r\n\r\n  async scheduled(event: ScheduledEvent, env: Env): Promise<void> {\r\n    const bot = new Bot(env.BOT_TOKEN);\r\n    const cronType =\r\n      event.cron === \"0 21 * * *\"\r\n        ? \"daily\"\r\n        : event.cron === \"0 21 * * 5\"\r\n        ? \"weekly\"\r\n        : \"custom\";\r\n\r\n    await setupPollSchedulers(bot, env, cronType);\r\n  },\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA,QAAM,YAAY;AAAA,MACd,eAAe;AAAA,QAAC;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACjJ;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrI;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA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",
  "names": ["d", "h", "expanded", "s", "emoji", "reaction", "title", "m", "ok", "str", "match", "debug", "config", "options", "m", "title", "ok", "setup", "unauthorized", "config", "bot"]
}
